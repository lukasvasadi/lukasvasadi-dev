import{s as Ci,n as fi}from"./scheduler.ae1baad1.js";import{S as xi,i as hi,g as o,s as n,r as ot,H as r,e as cp,h as p,z as i,c as a,u as pt,D as c,a as l,v as it,d as rt,t as ct,f as s,w as yt}from"./index.0e1198e2.js";import{T as ha}from"./tag.88b6625d.js";import{H as xa}from"./heading.44adad14.js";function Fi(yp){let y,Fa='<img src="/images/npm-keyboard.jpg" alt="MacBook with npm sticker and mechanical keyboard"/>',_s,B,_a="Contents",As,v,Aa='<li><a href="#introduction">Introduction</a></li> <li><a href="#windows">Windows</a></li> <li><a href="#macos">macOS</a></li> <li><a href="#linux">Linux</a></li>',ws,u,bs,d,wa="This tutorial covers the installation process for Python and Node.js using system package managers, i.e., Chocolatey for Windows, Homebrew for macOS, and the Advanced Package Tool (APT) for Debian flavors of Linux. It also covers how to create and manage virtual environments for Python.",ks,m,ba="What is Python?",Ps,C,ka='<a href="https://www.python.org/" rel="nofollow">Python</a> is an open-source, high-level, dynamically-typed, general-purpose programming language that is particularly suited for data science and machine learning. However, because of its human-readable syntax, Python has become one of the most popular programming languages in the world, frequently used in back-end web development, networking, automation, and even embedded systems. In September 2023, <a href="https://www.modular.com/mojo" rel="nofollow">Mojo</a> was released as a “superset” of Python that uses a “just-in-time” (JIT) compiler to optimize Python source code for parallelization in the CPU and GPU, giving Python more dominance in artificial intelligence.',Es,f,Pa="What is a Python virtual environment?",qs,x,Ea="If not specified, the package installer for Python (<code>pip</code>) will place all external modules inside the <code>site-packages/</code> directory of the base Python installation. This can become problematic for the following reasons:",Hs,h,qa="<li><p><strong>System pollution:</strong> Linux and macOS have preinstalled Python versions that each system uses for internal tasks. Changing the versions of any system-relevant packages may have unintended effects on OS behavior. Updating the OS could also overwrite some of the package installations.</p></li> <li><p><strong>Dependency conflicts:</strong> Different projects may require different versions of the same package. If all packages are centralized, then certain projects may break unexpectedly.</p></li>",Ts,F,Ha="Virtual environments sidestep these issues by creating sandboxed directories that store all packages for individual projects. These directories also contain aliases (Unix) or shortcuts (Windows) to the relevant Python binaries so that the project can be run with a specific Python version. By activating a virtual environment, you tell the system to point to this directory whenever running the Python executable.",$s,_,Ta="What is Node.js?",Ds,A,$a='<a href="https://nodejs.org/en" rel="nofollow">Node.js</a> is an open-source JavaScript runtime (server environment) that allows developers to create full stack web, desktop, and mobile apps with one language. (Prior to Node.js, JavaScript could only be run in the browser.) It uses the V8 JavaScript engine—developed by Google for its Chrome browser—to function as a scripting language similar to Python. One of its most popular use cases is as the back-end of the Electron framework, which packages web applications into standalone desktop apps, e.g., Visual Studio Code, Slack, WhatsApp.',Ms,w,Ss,b,js,k,Da="Chocolatey",Ls,P,Ma='<a href="https://chocolatey.org/" rel="nofollow">Chocolatey</a> is a community-driven general package manager for Windows that eliminates the need for installation wizards. The developers of Chocolatey created a script to automate the installation process. As stated above, to run a script downloaded from the internet, we need to change the security permissions in PowerShell. (This will also be needed later to install the full developer toolchain. See the PowerShell tutorial for more information on security policies.) In an administrative shell, execute the following commands:',Ns,Bt,Bp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">Set-ExecutionPolicy</span><span style="color: #ABB2BF"> RemoteSigned</span></span>
<span class="line"><span style="color: #ABB2BF">[</span><span style="color: #C678DD">System.Net.ServicePointManager</span><span style="color: #ABB2BF">]::SecurityProtocol </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Net.ServicePointManager</span><span style="color: #ABB2BF">]::SecurityProtocol </span><span style="color: #56B6C2">-bor</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3072</span></span></code></pre>`,vt,E,Sa="Download and run the installation script:",zs,ut,vp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">iex ((</span><span style="color: #56B6C2">New-Object</span><span style="color: #ABB2BF"> System.Net.WebClient).DownloadString(</span><span style="color: #98C379">&#39;https://community.chocolatey.org/install.ps1&#39;</span><span style="color: #ABB2BF">))</span></span></code></pre>',dt,q,ja="Refresh the shell environment:",Os,mt,up='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #E06C75">$env:Path</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Machine&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;;&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;User&quot;</span><span style="color: #ABB2BF">)</span></span></code></pre>',Ct,H,La="Confirm <code>choco</code> installation:",Is,ft,dp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">choco </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">version</span></span></code></pre>',xt,T,Na="Python",Vs,$,za='Unlike macOS and Linux, Windows does not come prepackaged with Python. Users have the option to manually install a specific Python version or use <a href="https://github.com/pyenv-win/pyenv-win" rel="nofollow">pyenv-win</a> to manage multiple installations on the same machine.',Ws,D,Oa="Pyenv",Us,M,Ia="In an administrative shell, install pyenv with <code>choco</code>:",Rs,ht,mp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">choco install pyenv</span><span style="color: #56B6C2">-</span><span style="color: #ABB2BF">win</span></span></code></pre>',Ft,S,Va="Refresh the shell environment:",Gs,_t,Cp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #E06C75">$env:Path</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Machine&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;;&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;User&quot;</span><span style="color: #ABB2BF">)</span></span></code></pre>',At,j,Wa="Confirm installation:",Js,wt,fp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">pyenv </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">version</span></span></code></pre>',bt,L,Ys,N,Ua="After reordering the environment variables, refresh the shell environment:",Xs,kt,xp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #E06C75">$env:Path</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Machine&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;;&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;User&quot;</span><span style="color: #ABB2BF">)</span></span></code></pre>',Pt,z,Ra="At this point, you are ready to setup Python. To print a list of available Python installations:",Ks,Et,hp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">pyenv install </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">list</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># restrict output to a specific major Python version</span></span>
<span class="line"><span style="color: #ABB2BF">pyenv install </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">list | </span><span style="color: #56B6C2">Select-String</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;3.11&quot;</span></span></code></pre>`,qt,O,Ga="Install a specific version of Python:",Qs,Ht,Fp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># 3.11.3 as an example</span></span>
<span class="line"><span style="color: #ABB2BF">pyenv install </span><span style="color: #D19A66">3.11</span><span style="color: #ABB2BF">.</span><span style="color: #D19A66">3</span></span></code></pre>`,Tt,I,Ja="Set the global Python version, which will be the Python distribution normally referenced by shell programs:",Zs,$t,_p='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">pyenv global </span><span style="color: #D19A66">3.11</span><span style="color: #ABB2BF">.</span><span style="color: #D19A66">3</span></span></code></pre>',Dt,V,Ya="Confirm that python and pip point to the correct executables:",gs,Mt,Ap='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">(</span><span style="color: #56B6C2">Get-Command</span><span style="color: #ABB2BF"> python).Source ; (</span><span style="color: #56B6C2">Get-Command</span><span style="color: #ABB2BF"> pip).Source</span></span></code></pre>',St,W,Xa="You should see two paths returned that contain <code>\\.pyenv\\shims\\python</code> and <code>\\.pyenv\\shims\\pip</code>. If not, you may have to recheck your environment variables.",en,U,Ka="Now, you can run Python:",tn,jt,wp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">python </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">version</span></span></code></pre>',Lt,R,Qa="Virtual Environments",ln,G,Za="Unfortunately, pyenv-win does not include the normal pyenv utility for managing virtual environments. Windows users need to follow the traditional approach to create a sandboxed environment:",sn,Nt,bp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># env can have any name</span></span>
<span class="line"><span style="color: #ABB2BF">python </span><span style="color: #56B6C2">-</span><span style="color: #ABB2BF">m venv C:\\path&#92;to\\env</span></span></code></pre>`,zt,J,ga="This will reference the Python version set by pyenv <code>global</code> or <code>local</code> and create a new directory that contains the Python executable and any site packages installed via <code>pip</code>. Note that once created, the virtual environment directory cannot be moved to another location. Many developers choose to store their environments in a dedicated subdirectory of their project folder.",nn,Y,eo="To activate the environment:",an,Ot,kp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">C:\\path&#92;to\\env\\Scripts\\Activate.ps1</span></span></code></pre>',It,X,to="To deactivate:",on,Vt,Pp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">deactivate</span></span></code></pre>',Wt,K,lo="Node.js",pn,Q,so="Node.js is a popular JavaScript runtime used for server-side programming or desktop app development.",rn,Z,no="NVM",cn,g,ao="Similar to Python, Node.js has a version manager (nvm) that was created for macOS and Linux, and later cloned for Windows (nvm-windows). Using nvm allows developers to manage multiple versions of Node.js on one machine, eliminating conflicts between projects with different requirements.",yn,ee,oo="To install nvm, first ensure that there are no pre-existing versions of Node.js installed on the machine, as this may cause conflicts. Then, in an administrative shell, run the automated install script:",Bn,Ut,Ep='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">choco install nvm</span></span></code></pre>',Rt,te,po="Refresh the shell environment:",vn,Gt,qp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #E06C75">$env:Path</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Machine&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;;&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> [</span><span style="color: #C678DD">System.Environment</span><span style="color: #ABB2BF">]::GetEnvironmentVariable(</span><span style="color: #98C379">&quot;Path&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;User&quot;</span><span style="color: #ABB2BF">)</span></span></code></pre>',Jt,le,io="Confirm nvm installation:",un,Yt,Hp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">nvm </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">version</span></span></code></pre>',Xt,se,ro="Install the latest version of Node.js:",dn,Kt,Tp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">nvm install latest</span></span></code></pre>',Qt,ne,co="Check to see the Node.js available versions:",mn,Zt,$p='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">nvm list</span></span></code></pre>',gt,ae,yo="Activate the desired Node.js version:",Cn,el,Dp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">nvm use </span><span style="color: #D19A66">18.4</span><span style="color: #ABB2BF">.</span><span style="color: #D19A66">0</span></span></code></pre>',tl,oe,Bo="Confirm Node.js activation:",fn,ll,Mp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">node </span><span style="color: #56B6C2">--</span><span style="color: #ABB2BF">version</span></span></code></pre>',sl,pe,xn,ie,vo="Homebrew",hn,re,uo="Similar to Chocolatey, Homebrew is the standard general package manager for macOS.",Fn,ce,mo="To install Homebrew (the system may prompt for your user password):",_n,nl,Sp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">curl</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-fsSL</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">bash</span></span></code></pre>',al,ye,Co="Update the <code>PATH</code> variable to locate the <code>brew</code> binaries by modifying the special environment file <code>~/.zshrc</code>:",An,ol,jp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">touch</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span>
<span class="line"><span style="color: #61AFEF">open</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-e</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>`,pl,il,Lp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># brew</span></span>
<span class="line"><span style="color: #56B6C2">eval</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;$(</span><span style="color: #61AFEF">/opt/homebrew/bin/brew</span><span style="color: #98C379"> shellenv)&quot;</span></span></code></pre>`,rl,Be,fo="Confirm successful installation:",wn,cl,Np='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">brew</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">doctor</span></span></code></pre>',yl,ve,xo="If the command <code>brew</code> is unrecognized, then there may have been an issue with the installation, probably related to the Xcode command line tools. Unfortunately, this will need to be fixed before proceeding to the next steps.",bn,ue,ho="Python",kn,de,Fo="Although macOS comes prepackaged with Python, it is recommended to reserve that installation for system usage. For this reason, pyenv provides an easy way to manage multiple versions of Python on one machine.",Pn,me,_o="Pyenv",En,Ce,Ao="To install pyenv, as well as its convenient virtual environment tool, run the following automated installation scripts:",qn,Bl,zp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">brew</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pyenv</span></span>
<span class="line"><span style="color: #61AFEF">brew</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pyenv-virtualenv</span></span></code></pre>`,vl,fe,wo="Refresh the environment:",Hn,ul,Op='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>',dl,xe,bo="Confirm pyenv installation:",Tn,ml,Ip='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--version</span></span></code></pre>',Cl,he,ko="To see a list of available Python installations:",$n,fl,Vp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--list</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># restrict output to a major Python version</span></span>
<span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--list</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">grep</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;3.11&quot;</span></span></code></pre>`,xl,Fe,Po="Install a version of Python:",Dn,hl,Wp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># 3.11.3 as an example</span></span>
<span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3.11</span><span style="color: #98C379">.3</span></span></code></pre>`,Fl,_e,Eo="Set the global Python version, which will become the default Python for your shell:",Mn,_l,Up='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">global</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3.11</span><span style="color: #98C379">.3</span></span></code></pre>',Al,Ae,qo="Before running Python, we need to add the <code>.pyenv</code> root directory to the system <code>$PATH</code> and initialize the utility on shell startup. To do so, open the shell environment files with the default text editor:",Sn,wl,Rp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">open</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-e</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>',bl,we,Ho="Append the following lines:",jn,kl,Gp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># pyenv</span></span>
<span class="line"><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">PYENV_ROOT</span><span style="color: #56B6C2">=</span><span style="color: #98C379">&quot;</span><span style="color: #E06C75">$HOME</span><span style="color: #98C379">/.pyenv&quot;</span></span>
<span class="line"><span style="color: #56B6C2">command</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-v</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pyenv</span><span style="color: #ABB2BF"> &gt;</span><span style="color: #98C379">/dev/null</span><span style="color: #ABB2BF"> || </span><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">PATH</span><span style="color: #56B6C2">=</span><span style="color: #98C379">&quot;</span><span style="color: #E06C75">$PYENV_ROOT</span><span style="color: #98C379">/bin:</span><span style="color: #E06C75">$PATH</span><span style="color: #98C379">&quot;</span></span>
<span class="line"><span style="color: #56B6C2">eval</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;$(</span><span style="color: #61AFEF">pyenv</span><span style="color: #98C379"> init -)&quot;</span></span></code></pre>`,Pl,be,To="Save and close both documents, then refresh the environment and check the <code>python</code> and <code>pip</code> executables:",Ln,El,Jp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span>
<span class="line"><span style="color: #56B6C2">which</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">python</span><span style="color: #ABB2BF"> &amp;&amp; </span><span style="color: #56B6C2">which</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pip</span></span></code></pre>`,ql,ke,$o="Now you can run Python!",Nn,Pe,Do="Virtual Environments",zn,Ee,Mo="Pyenv also provides an easy way to create and manage virtual environments. To create a new environment named “env”:",On,Hl,Yp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># assuming you navigated inside the project directory</span></span>
<span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">local</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">env</span></span></code></pre>`,Tl,qe,So="To deactivate the environment:",In,$l,Xp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">deactivate</span></span></code></pre>',Dl,He,jo="Node.js",Vn,Te,Lo="As mentioned above, Node.js is a popular JavaScript runtime that can be easily managed with nvm.",Wn,$e,No="NVM",Un,De,zo="To install nvm:",Rn,Ml,Kp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">brew</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">nvm</span></span></code></pre>',Sl,Me,Oo="Confirm installation:",Gn,jl,Qp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">command</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-v</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">nvm</span></span></code></pre>',Ll,Se,Io="If nothing returns, you may need to add the following lines to <code>~/.zshrc</code>:",Jn,Nl,Zp=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># nvm</span></span>
<span class="line"><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">NVM_DIR</span><span style="color: #56B6C2">=</span><span style="color: #98C379">&quot;</span><span style="color: #E06C75">$HOME</span><span style="color: #98C379">/.nvm&quot;</span></span>
<span class="line"><span style="color: #ABB2BF">[ </span><span style="color: #56B6C2">-s</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span><span style="color: #ABB2BF"> ] &amp;&amp; </span><span style="color: #61AFEF">.</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span></span>
<span class="line"><span style="color: #ABB2BF">[ </span><span style="color: #56B6C2">-s</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span><span style="color: #ABB2BF"> ] &amp;&amp; </span><span style="color: #61AFEF">.</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span></span></code></pre>`,zl,je,Vo="Refresh the environment:",Yn,Ol,gp='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>',Il,Le,Wo="Install the latest stable version of Node:",Xn,Vl,ei='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">nvm</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">stable</span></span></code></pre>',Wl,Ne,Uo="Confirm Node installation:",Kn,Ul,ti='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">node</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--version</span></span></code></pre>',Rl,ze,Qn,Oe,Zn,Ie,Ro="Before installing any software, it is good practice to update, and possibly upgrade, the existing system packages:",gn,Gl,li='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">apt</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">update</span><span style="color: #ABB2BF"> &amp;&amp; </span><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">apt</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">upgrade</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-y</span></span></code></pre>',Jl,Ve,Go="Python",ea,We,Jo="Pyenv",ta,Ue,Yo="To install <code>pyenv</code>, first install its dependencies:",la,Yl,si='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">apt</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-y</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">make</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build-essential</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libssl-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">zlib1g-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libbz2-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libreadline-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libsqlite3-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">wget</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">curl</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">llvm</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libncurses5-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libncursesw5-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">xz-utils</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">tk-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libffi-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">liblzma-dev</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">python-openssl</span></span></code></pre>',Xl,Re,Xo="Then, execute the <code>pyenv</code> installer:",sa,Kl,ni='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">curl</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">https://pyenv.run</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">bash</span></span></code></pre>',Ql,Ge,Ko="Before running Python, we need to add the <code>.pyenv</code> root directory to the system <code>$PATH</code> and initialize the utility on shell startup. To do so, open the shell environment files with the default text editor:",na,Zl,ai='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">open</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-e</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>',gl,Je,Qo="Append the following lines:",aa,es,oi=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># pyenv</span></span>
<span class="line"><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">PYENV_ROOT</span><span style="color: #56B6C2">=</span><span style="color: #98C379">&quot;</span><span style="color: #E06C75">$HOME</span><span style="color: #98C379">/.pyenv&quot;</span></span>
<span class="line"><span style="color: #56B6C2">command</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-v</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pyenv</span><span style="color: #ABB2BF"> &gt;</span><span style="color: #98C379">/dev/null</span><span style="color: #ABB2BF"> || </span><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">PATH</span><span style="color: #56B6C2">=</span><span style="color: #98C379">&quot;</span><span style="color: #E06C75">$PYENV_ROOT</span><span style="color: #98C379">/bin:</span><span style="color: #E06C75">$PATH</span><span style="color: #98C379">&quot;</span></span>
<span class="line"><span style="color: #56B6C2">eval</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;$(</span><span style="color: #61AFEF">pyenv</span><span style="color: #98C379"> init -)&quot;</span></span></code></pre>`,ts,ls,pi='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span></code></pre>',ss,Ye,Zo="Confirm <code>pyenv</code> installation:",oa,ns,ii='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--version</span></span></code></pre>',as,Xe,go="To see a list of all Python versions available for installation:",pa,os,ri=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--list</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># restrict list output to a major Python version</span></span>
<span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--list</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">grep</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;3.11&quot;</span></span></code></pre>`,ps,Ke,ep="Install Python:",ia,is,ci=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># 3.11.3 as an example</span></span>
<span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3.11</span><span style="color: #98C379">.3</span></span></code></pre>`,rs,Qe,tp="Set the global Python version:",ra,cs,yi='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">pyenv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">global</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">3.11</span><span style="color: #98C379">.3</span></span></code></pre>',ys,Ze,lp="Confirm that <code>python</code> and <code>pip</code> point to the correct executables:",ca,Bs,Bi='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">which</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">python</span><span style="color: #ABB2BF"> &amp;&amp; </span><span style="color: #56B6C2">which</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pip</span></span></code></pre>',vs,ge,sp="Now, you can use Python!",ya,et,np="Node.js",Ba,tt,ap="NVM",va,lt,op="To install nvm, run the automated script:",ua,us,vi='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">curl</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-o-</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">bash</span></span></code></pre>',ds,st,pp="Refresh the environment and confirm installation:",da,ms,ui=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">source</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~/.zshrc</span></span>
<span class="line"><span style="color: #61AFEF">nvm</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--version</span></span></code></pre>`,Cs,nt,ip="Install the latest stable release of Node.js:",ma,fs,di='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">nvm</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">stable</span></span></code></pre>',xs,at,rp="Confirm successful Node installation:",Ca,hs,mi='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">node</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--version</span></span></code></pre>',Fs,fa;return u=new xa({props:{str:"Introduction"}}),w=new xa({props:{str:"Windows"}}),b=new ha({props:{msg:'The following commands require PowerShell, which has more advanced functionality than the command prompt. Further, to run installation scripts in Windows, you must use a shell with administrator privileges. Search for "PowerShell" in the Windows search box, right-click the application, and select "Run as administrator."'}}),L=new ha({props:{msg:"Before proceeding, you must reorder the <code>$Path</code> environment variable to give higher precedence to the binaries stored under pyenv. Otherwise, by default, Windows will search for the Python binaries in its AppData directory. This can be accomplished from the command line, however, I recommend using the environment variable dialog, which can be found via the Windows search box."}}),pe=new xa({props:{str:"macOS"}}),ze=new xa({props:{str:"Linux"}}),Oe=new ha({props:{msg:"This tutorial only covers Debian flavors of Linux, e.g., Ubuntu, Pop_OS!."}}),{c(){y=o("p"),y.innerHTML=Fa,_s=n(),B=o("h2"),B.textContent=_a,As=n(),v=o("ul"),v.innerHTML=Aa,ws=n(),ot(u.$$.fragment),bs=n(),d=o("p"),d.textContent=wa,ks=n(),m=o("h3"),m.textContent=ba,Ps=n(),C=o("p"),C.innerHTML=ka,Es=n(),f=o("h3"),f.textContent=Pa,qs=n(),x=o("p"),x.innerHTML=Ea,Hs=n(),h=o("ol"),h.innerHTML=qa,Ts=n(),F=o("p"),F.textContent=Ha,$s=n(),_=o("h3"),_.textContent=Ta,Ds=n(),A=o("p"),A.innerHTML=$a,Ms=n(),ot(w.$$.fragment),Ss=n(),ot(b.$$.fragment),js=n(),k=o("h3"),k.textContent=Da,Ls=n(),P=o("p"),P.innerHTML=Ma,Ns=n(),Bt=new r(!1),vt=n(),E=o("p"),E.textContent=Sa,zs=n(),ut=new r(!1),dt=n(),q=o("p"),q.textContent=ja,Os=n(),mt=new r(!1),Ct=n(),H=o("p"),H.innerHTML=La,Is=n(),ft=new r(!1),xt=n(),T=o("h3"),T.textContent=Na,Vs=n(),$=o("p"),$.innerHTML=za,Ws=n(),D=o("h4"),D.textContent=Oa,Us=n(),M=o("p"),M.innerHTML=Ia,Rs=n(),ht=new r(!1),Ft=n(),S=o("p"),S.textContent=Va,Gs=n(),_t=new r(!1),At=n(),j=o("p"),j.textContent=Wa,Js=n(),wt=new r(!1),bt=n(),ot(L.$$.fragment),Ys=n(),N=o("p"),N.textContent=Ua,Xs=n(),kt=new r(!1),Pt=n(),z=o("p"),z.textContent=Ra,Ks=n(),Et=new r(!1),qt=n(),O=o("p"),O.textContent=Ga,Qs=n(),Ht=new r(!1),Tt=n(),I=o("p"),I.textContent=Ja,Zs=n(),$t=new r(!1),Dt=n(),V=o("p"),V.textContent=Ya,gs=n(),Mt=new r(!1),St=n(),W=o("p"),W.innerHTML=Xa,en=n(),U=o("p"),U.textContent=Ka,tn=n(),jt=new r(!1),Lt=n(),R=o("h4"),R.textContent=Qa,ln=n(),G=o("p"),G.textContent=Za,sn=n(),Nt=new r(!1),zt=n(),J=o("p"),J.innerHTML=ga,nn=n(),Y=o("p"),Y.textContent=eo,an=n(),Ot=new r(!1),It=n(),X=o("p"),X.textContent=to,on=n(),Vt=new r(!1),Wt=n(),K=o("h3"),K.textContent=lo,pn=n(),Q=o("p"),Q.textContent=so,rn=n(),Z=o("h4"),Z.textContent=no,cn=n(),g=o("p"),g.textContent=ao,yn=n(),ee=o("p"),ee.textContent=oo,Bn=n(),Ut=new r(!1),Rt=n(),te=o("p"),te.textContent=po,vn=n(),Gt=new r(!1),Jt=n(),le=o("p"),le.textContent=io,un=n(),Yt=new r(!1),Xt=n(),se=o("p"),se.textContent=ro,dn=n(),Kt=new r(!1),Qt=n(),ne=o("p"),ne.textContent=co,mn=n(),Zt=new r(!1),gt=n(),ae=o("p"),ae.textContent=yo,Cn=n(),el=new r(!1),tl=n(),oe=o("p"),oe.textContent=Bo,fn=n(),ll=new r(!1),sl=n(),ot(pe.$$.fragment),xn=n(),ie=o("h3"),ie.textContent=vo,hn=n(),re=o("p"),re.textContent=uo,Fn=n(),ce=o("p"),ce.textContent=mo,_n=n(),nl=new r(!1),al=n(),ye=o("p"),ye.innerHTML=Co,An=n(),ol=new r(!1),pl=n(),il=new r(!1),rl=n(),Be=o("p"),Be.textContent=fo,wn=n(),cl=new r(!1),yl=n(),ve=o("p"),ve.innerHTML=xo,bn=n(),ue=o("h3"),ue.textContent=ho,kn=n(),de=o("p"),de.textContent=Fo,Pn=n(),me=o("h4"),me.textContent=_o,En=n(),Ce=o("p"),Ce.textContent=Ao,qn=n(),Bl=new r(!1),vl=n(),fe=o("p"),fe.textContent=wo,Hn=n(),ul=new r(!1),dl=n(),xe=o("p"),xe.textContent=bo,Tn=n(),ml=new r(!1),Cl=n(),he=o("p"),he.textContent=ko,$n=n(),fl=new r(!1),xl=n(),Fe=o("p"),Fe.textContent=Po,Dn=n(),hl=new r(!1),Fl=n(),_e=o("p"),_e.textContent=Eo,Mn=n(),_l=new r(!1),Al=n(),Ae=o("p"),Ae.innerHTML=qo,Sn=n(),wl=new r(!1),bl=n(),we=o("p"),we.textContent=Ho,jn=n(),kl=new r(!1),Pl=n(),be=o("p"),be.innerHTML=To,Ln=n(),El=new r(!1),ql=n(),ke=o("p"),ke.textContent=$o,Nn=n(),Pe=o("h4"),Pe.textContent=Do,zn=n(),Ee=o("p"),Ee.textContent=Mo,On=n(),Hl=new r(!1),Tl=n(),qe=o("p"),qe.textContent=So,In=n(),$l=new r(!1),Dl=n(),He=o("h3"),He.textContent=jo,Vn=n(),Te=o("p"),Te.textContent=Lo,Wn=n(),$e=o("h4"),$e.textContent=No,Un=n(),De=o("p"),De.textContent=zo,Rn=n(),Ml=new r(!1),Sl=n(),Me=o("p"),Me.textContent=Oo,Gn=n(),jl=new r(!1),Ll=n(),Se=o("p"),Se.innerHTML=Io,Jn=n(),Nl=new r(!1),zl=n(),je=o("p"),je.textContent=Vo,Yn=n(),Ol=new r(!1),Il=n(),Le=o("p"),Le.textContent=Wo,Xn=n(),Vl=new r(!1),Wl=n(),Ne=o("p"),Ne.textContent=Uo,Kn=n(),Ul=new r(!1),Rl=n(),ot(ze.$$.fragment),Qn=n(),ot(Oe.$$.fragment),Zn=n(),Ie=o("p"),Ie.textContent=Ro,gn=n(),Gl=new r(!1),Jl=n(),Ve=o("h3"),Ve.textContent=Go,ea=n(),We=o("h4"),We.textContent=Jo,ta=n(),Ue=o("p"),Ue.innerHTML=Yo,la=n(),Yl=new r(!1),Xl=n(),Re=o("p"),Re.innerHTML=Xo,sa=n(),Kl=new r(!1),Ql=n(),Ge=o("p"),Ge.innerHTML=Ko,na=n(),Zl=new r(!1),gl=n(),Je=o("p"),Je.textContent=Qo,aa=n(),es=new r(!1),ts=n(),ls=new r(!1),ss=n(),Ye=o("p"),Ye.innerHTML=Zo,oa=n(),ns=new r(!1),as=n(),Xe=o("p"),Xe.textContent=go,pa=n(),os=new r(!1),ps=n(),Ke=o("p"),Ke.textContent=ep,ia=n(),is=new r(!1),rs=n(),Qe=o("p"),Qe.textContent=tp,ra=n(),cs=new r(!1),ys=n(),Ze=o("p"),Ze.innerHTML=lp,ca=n(),Bs=new r(!1),vs=n(),ge=o("p"),ge.textContent=sp,ya=n(),et=o("h3"),et.textContent=np,Ba=n(),tt=o("h4"),tt.textContent=ap,va=n(),lt=o("p"),lt.textContent=op,ua=n(),us=new r(!1),ds=n(),st=o("p"),st.textContent=pp,da=n(),ms=new r(!1),Cs=n(),nt=o("p"),nt.textContent=ip,ma=n(),fs=new r(!1),xs=n(),at=o("p"),at.textContent=rp,Ca=n(),hs=new r(!1),Fs=cp(),this.h()},l(e){y=p(e,"P",{"data-svelte-h":!0}),i(y)!=="svelte-11oujff"&&(y.innerHTML=Fa),_s=a(e),B=p(e,"H2",{"data-svelte-h":!0}),i(B)!=="svelte-jpxk5s"&&(B.textContent=_a),As=a(e),v=p(e,"UL",{"data-svelte-h":!0}),i(v)!=="svelte-f92pj0"&&(v.innerHTML=Aa),ws=a(e),pt(u.$$.fragment,e),bs=a(e),d=p(e,"P",{"data-svelte-h":!0}),i(d)!=="svelte-1c8speb"&&(d.textContent=wa),ks=a(e),m=p(e,"H3",{"data-svelte-h":!0}),i(m)!=="svelte-10v6m9t"&&(m.textContent=ba),Ps=a(e),C=p(e,"P",{"data-svelte-h":!0}),i(C)!=="svelte-h9t4so"&&(C.innerHTML=ka),Es=a(e),f=p(e,"H3",{"data-svelte-h":!0}),i(f)!=="svelte-l8ti2e"&&(f.textContent=Pa),qs=a(e),x=p(e,"P",{"data-svelte-h":!0}),i(x)!=="svelte-o5v0dc"&&(x.innerHTML=Ea),Hs=a(e),h=p(e,"OL",{"data-svelte-h":!0}),i(h)!=="svelte-1yrfno5"&&(h.innerHTML=qa),Ts=a(e),F=p(e,"P",{"data-svelte-h":!0}),i(F)!=="svelte-1je9ejl"&&(F.textContent=Ha),$s=a(e),_=p(e,"H3",{"data-svelte-h":!0}),i(_)!=="svelte-x06fvw"&&(_.textContent=Ta),Ds=a(e),A=p(e,"P",{"data-svelte-h":!0}),i(A)!=="svelte-1y1ouz0"&&(A.innerHTML=$a),Ms=a(e),pt(w.$$.fragment,e),Ss=a(e),pt(b.$$.fragment,e),js=a(e),k=p(e,"H3",{"data-svelte-h":!0}),i(k)!=="svelte-124bbup"&&(k.textContent=Da),Ls=a(e),P=p(e,"P",{"data-svelte-h":!0}),i(P)!=="svelte-1pqe07d"&&(P.innerHTML=Ma),Ns=a(e),Bt=c(e,!1),vt=a(e),E=p(e,"P",{"data-svelte-h":!0}),i(E)!=="svelte-1k9ndoe"&&(E.textContent=Sa),zs=a(e),ut=c(e,!1),dt=a(e),q=p(e,"P",{"data-svelte-h":!0}),i(q)!=="svelte-1i22hwd"&&(q.textContent=ja),Os=a(e),mt=c(e,!1),Ct=a(e),H=p(e,"P",{"data-svelte-h":!0}),i(H)!=="svelte-1v3vrqd"&&(H.innerHTML=La),Is=a(e),ft=c(e,!1),xt=a(e),T=p(e,"H3",{"data-svelte-h":!0}),i(T)!=="svelte-vvgzpq"&&(T.textContent=Na),Vs=a(e),$=p(e,"P",{"data-svelte-h":!0}),i($)!=="svelte-1jr2497"&&($.innerHTML=za),Ws=a(e),D=p(e,"H4",{"data-svelte-h":!0}),i(D)!=="svelte-1jgjki4"&&(D.textContent=Oa),Us=a(e),M=p(e,"P",{"data-svelte-h":!0}),i(M)!=="svelte-wnftp4"&&(M.innerHTML=Ia),Rs=a(e),ht=c(e,!1),Ft=a(e),S=p(e,"P",{"data-svelte-h":!0}),i(S)!=="svelte-1i22hwd"&&(S.textContent=Va),Gs=a(e),_t=c(e,!1),At=a(e),j=p(e,"P",{"data-svelte-h":!0}),i(j)!=="svelte-18951iq"&&(j.textContent=Wa),Js=a(e),wt=c(e,!1),bt=a(e),pt(L.$$.fragment,e),Ys=a(e),N=p(e,"P",{"data-svelte-h":!0}),i(N)!=="svelte-ui4e2p"&&(N.textContent=Ua),Xs=a(e),kt=c(e,!1),Pt=a(e),z=p(e,"P",{"data-svelte-h":!0}),i(z)!=="svelte-19d8ej3"&&(z.textContent=Ra),Ks=a(e),Et=c(e,!1),qt=a(e),O=p(e,"P",{"data-svelte-h":!0}),i(O)!=="svelte-5hwhx1"&&(O.textContent=Ga),Qs=a(e),Ht=c(e,!1),Tt=a(e),I=p(e,"P",{"data-svelte-h":!0}),i(I)!=="svelte-owhkgq"&&(I.textContent=Ja),Zs=a(e),$t=c(e,!1),Dt=a(e),V=p(e,"P",{"data-svelte-h":!0}),i(V)!=="svelte-1s3uzvq"&&(V.textContent=Ya),gs=a(e),Mt=c(e,!1),St=a(e),W=p(e,"P",{"data-svelte-h":!0}),i(W)!=="svelte-1mx2mv4"&&(W.innerHTML=Xa),en=a(e),U=p(e,"P",{"data-svelte-h":!0}),i(U)!=="svelte-7v3ctw"&&(U.textContent=Ka),tn=a(e),jt=c(e,!1),Lt=a(e),R=p(e,"H4",{"data-svelte-h":!0}),i(R)!=="svelte-k07ad9"&&(R.textContent=Qa),ln=a(e),G=p(e,"P",{"data-svelte-h":!0}),i(G)!=="svelte-xh5xpl"&&(G.textContent=Za),sn=a(e),Nt=c(e,!1),zt=a(e),J=p(e,"P",{"data-svelte-h":!0}),i(J)!=="svelte-1aok0ru"&&(J.innerHTML=ga),nn=a(e),Y=p(e,"P",{"data-svelte-h":!0}),i(Y)!=="svelte-1lf05j2"&&(Y.textContent=eo),an=a(e),Ot=c(e,!1),It=a(e),X=p(e,"P",{"data-svelte-h":!0}),i(X)!=="svelte-2h0fz7"&&(X.textContent=to),on=a(e),Vt=c(e,!1),Wt=a(e),K=p(e,"H3",{"data-svelte-h":!0}),i(K)!=="svelte-1nsdrcp"&&(K.textContent=lo),pn=a(e),Q=p(e,"P",{"data-svelte-h":!0}),i(Q)!=="svelte-bket17"&&(Q.textContent=so),rn=a(e),Z=p(e,"H4",{"data-svelte-h":!0}),i(Z)!=="svelte-1i42qyf"&&(Z.textContent=no),cn=a(e),g=p(e,"P",{"data-svelte-h":!0}),i(g)!=="svelte-8g1zsk"&&(g.textContent=ao),yn=a(e),ee=p(e,"P",{"data-svelte-h":!0}),i(ee)!=="svelte-1w6oz7g"&&(ee.textContent=oo),Bn=a(e),Ut=c(e,!1),Rt=a(e),te=p(e,"P",{"data-svelte-h":!0}),i(te)!=="svelte-1i22hwd"&&(te.textContent=po),vn=a(e),Gt=c(e,!1),Jt=a(e),le=p(e,"P",{"data-svelte-h":!0}),i(le)!=="svelte-6pjjep"&&(le.textContent=io),un=a(e),Yt=c(e,!1),Xt=a(e),se=p(e,"P",{"data-svelte-h":!0}),i(se)!=="svelte-6eduf3"&&(se.textContent=ro),dn=a(e),Kt=c(e,!1),Qt=a(e),ne=p(e,"P",{"data-svelte-h":!0}),i(ne)!=="svelte-1vq8gky"&&(ne.textContent=co),mn=a(e),Zt=c(e,!1),gt=a(e),ae=p(e,"P",{"data-svelte-h":!0}),i(ae)!=="svelte-9ns3ud"&&(ae.textContent=yo),Cn=a(e),el=c(e,!1),tl=a(e),oe=p(e,"P",{"data-svelte-h":!0}),i(oe)!=="svelte-ya06f"&&(oe.textContent=Bo),fn=a(e),ll=c(e,!1),sl=a(e),pt(pe.$$.fragment,e),xn=a(e),ie=p(e,"H3",{"data-svelte-h":!0}),i(ie)!=="svelte-qz1l4b"&&(ie.textContent=vo),hn=a(e),re=p(e,"P",{"data-svelte-h":!0}),i(re)!=="svelte-we6xtv"&&(re.textContent=uo),Fn=a(e),ce=p(e,"P",{"data-svelte-h":!0}),i(ce)!=="svelte-1nj8ajv"&&(ce.textContent=mo),_n=a(e),nl=c(e,!1),al=a(e),ye=p(e,"P",{"data-svelte-h":!0}),i(ye)!=="svelte-tqrm8s"&&(ye.innerHTML=Co),An=a(e),ol=c(e,!1),pl=a(e),il=c(e,!1),rl=a(e),Be=p(e,"P",{"data-svelte-h":!0}),i(Be)!=="svelte-1oeyclw"&&(Be.textContent=fo),wn=a(e),cl=c(e,!1),yl=a(e),ve=p(e,"P",{"data-svelte-h":!0}),i(ve)!=="svelte-ob5y8u"&&(ve.innerHTML=xo),bn=a(e),ue=p(e,"H3",{"data-svelte-h":!0}),i(ue)!=="svelte-vvgzpq"&&(ue.textContent=ho),kn=a(e),de=p(e,"P",{"data-svelte-h":!0}),i(de)!=="svelte-1kay347"&&(de.textContent=Fo),Pn=a(e),me=p(e,"H4",{"data-svelte-h":!0}),i(me)!=="svelte-1jgjki4"&&(me.textContent=_o),En=a(e),Ce=p(e,"P",{"data-svelte-h":!0}),i(Ce)!=="svelte-9g238u"&&(Ce.textContent=Ao),qn=a(e),Bl=c(e,!1),vl=a(e),fe=p(e,"P",{"data-svelte-h":!0}),i(fe)!=="svelte-9v0vej"&&(fe.textContent=wo),Hn=a(e),ul=c(e,!1),dl=a(e),xe=p(e,"P",{"data-svelte-h":!0}),i(xe)!=="svelte-1lnb1kg"&&(xe.textContent=bo),Tn=a(e),ml=c(e,!1),Cl=a(e),he=p(e,"P",{"data-svelte-h":!0}),i(he)!=="svelte-1ro57o4"&&(he.textContent=ko),$n=a(e),fl=c(e,!1),xl=a(e),Fe=p(e,"P",{"data-svelte-h":!0}),i(Fe)!=="svelte-gahx6f"&&(Fe.textContent=Po),Dn=a(e),hl=c(e,!1),Fl=a(e),_e=p(e,"P",{"data-svelte-h":!0}),i(_e)!=="svelte-k3s19i"&&(_e.textContent=Eo),Mn=a(e),_l=c(e,!1),Al=a(e),Ae=p(e,"P",{"data-svelte-h":!0}),i(Ae)!=="svelte-h63bdd"&&(Ae.innerHTML=qo),Sn=a(e),wl=c(e,!1),bl=a(e),we=p(e,"P",{"data-svelte-h":!0}),i(we)!=="svelte-12li7fv"&&(we.textContent=Ho),jn=a(e),kl=c(e,!1),Pl=a(e),be=p(e,"P",{"data-svelte-h":!0}),i(be)!=="svelte-1ymfr3u"&&(be.innerHTML=To),Ln=a(e),El=c(e,!1),ql=a(e),ke=p(e,"P",{"data-svelte-h":!0}),i(ke)!=="svelte-fg7zp5"&&(ke.textContent=$o),Nn=a(e),Pe=p(e,"H4",{"data-svelte-h":!0}),i(Pe)!=="svelte-k07ad9"&&(Pe.textContent=Do),zn=a(e),Ee=p(e,"P",{"data-svelte-h":!0}),i(Ee)!=="svelte-hyl5kx"&&(Ee.textContent=Mo),On=a(e),Hl=c(e,!1),Tl=a(e),qe=p(e,"P",{"data-svelte-h":!0}),i(qe)!=="svelte-h6vn8h"&&(qe.textContent=So),In=a(e),$l=c(e,!1),Dl=a(e),He=p(e,"H3",{"data-svelte-h":!0}),i(He)!=="svelte-1nsdrcp"&&(He.textContent=jo),Vn=a(e),Te=p(e,"P",{"data-svelte-h":!0}),i(Te)!=="svelte-16jur17"&&(Te.textContent=Lo),Wn=a(e),$e=p(e,"H4",{"data-svelte-h":!0}),i($e)!=="svelte-1i42qyf"&&($e.textContent=No),Un=a(e),De=p(e,"P",{"data-svelte-h":!0}),i(De)!=="svelte-w90xkx"&&(De.textContent=zo),Rn=a(e),Ml=c(e,!1),Sl=a(e),Me=p(e,"P",{"data-svelte-h":!0}),i(Me)!=="svelte-18951iq"&&(Me.textContent=Oo),Gn=a(e),jl=c(e,!1),Ll=a(e),Se=p(e,"P",{"data-svelte-h":!0}),i(Se)!=="svelte-1ifytjt"&&(Se.innerHTML=Io),Jn=a(e),Nl=c(e,!1),zl=a(e),je=p(e,"P",{"data-svelte-h":!0}),i(je)!=="svelte-9v0vej"&&(je.textContent=Vo),Yn=a(e),Ol=c(e,!1),Il=a(e),Le=p(e,"P",{"data-svelte-h":!0}),i(Le)!=="svelte-166z2c3"&&(Le.textContent=Wo),Xn=a(e),Vl=c(e,!1),Wl=a(e),Ne=p(e,"P",{"data-svelte-h":!0}),i(Ne)!=="svelte-m2dez2"&&(Ne.textContent=Uo),Kn=a(e),Ul=c(e,!1),Rl=a(e),pt(ze.$$.fragment,e),Qn=a(e),pt(Oe.$$.fragment,e),Zn=a(e),Ie=p(e,"P",{"data-svelte-h":!0}),i(Ie)!=="svelte-1k1q5xy"&&(Ie.textContent=Ro),gn=a(e),Gl=c(e,!1),Jl=a(e),Ve=p(e,"H3",{"data-svelte-h":!0}),i(Ve)!=="svelte-vvgzpq"&&(Ve.textContent=Go),ea=a(e),We=p(e,"H4",{"data-svelte-h":!0}),i(We)!=="svelte-1jgjki4"&&(We.textContent=Jo),ta=a(e),Ue=p(e,"P",{"data-svelte-h":!0}),i(Ue)!=="svelte-1a6vggp"&&(Ue.innerHTML=Yo),la=a(e),Yl=c(e,!1),Xl=a(e),Re=p(e,"P",{"data-svelte-h":!0}),i(Re)!=="svelte-5msyg4"&&(Re.innerHTML=Xo),sa=a(e),Kl=c(e,!1),Ql=a(e),Ge=p(e,"P",{"data-svelte-h":!0}),i(Ge)!=="svelte-h63bdd"&&(Ge.innerHTML=Ko),na=a(e),Zl=c(e,!1),gl=a(e),Je=p(e,"P",{"data-svelte-h":!0}),i(Je)!=="svelte-12li7fv"&&(Je.textContent=Qo),aa=a(e),es=c(e,!1),ts=a(e),ls=c(e,!1),ss=a(e),Ye=p(e,"P",{"data-svelte-h":!0}),i(Ye)!=="svelte-1t5qye5"&&(Ye.innerHTML=Zo),oa=a(e),ns=c(e,!1),as=a(e),Xe=p(e,"P",{"data-svelte-h":!0}),i(Xe)!=="svelte-1675k9y"&&(Xe.textContent=go),pa=a(e),os=c(e,!1),ps=a(e),Ke=p(e,"P",{"data-svelte-h":!0}),i(Ke)!=="svelte-3bcyr3"&&(Ke.textContent=ep),ia=a(e),is=c(e,!1),rs=a(e),Qe=p(e,"P",{"data-svelte-h":!0}),i(Qe)!=="svelte-1o1sst2"&&(Qe.textContent=tp),ra=a(e),cs=c(e,!1),ys=a(e),Ze=p(e,"P",{"data-svelte-h":!0}),i(Ze)!=="svelte-zoeywi"&&(Ze.innerHTML=lp),ca=a(e),Bs=c(e,!1),vs=a(e),ge=p(e,"P",{"data-svelte-h":!0}),i(ge)!=="svelte-jv0dqp"&&(ge.textContent=sp),ya=a(e),et=p(e,"H3",{"data-svelte-h":!0}),i(et)!=="svelte-1nsdrcp"&&(et.textContent=np),Ba=a(e),tt=p(e,"H4",{"data-svelte-h":!0}),i(tt)!=="svelte-1i42qyf"&&(tt.textContent=ap),va=a(e),lt=p(e,"P",{"data-svelte-h":!0}),i(lt)!=="svelte-n5i71o"&&(lt.textContent=op),ua=a(e),us=c(e,!1),ds=a(e),st=p(e,"P",{"data-svelte-h":!0}),i(st)!=="svelte-5lbgsy"&&(st.textContent=pp),da=a(e),ms=c(e,!1),Cs=a(e),nt=p(e,"P",{"data-svelte-h":!0}),i(nt)!=="svelte-n3twn5"&&(nt.textContent=ip),ma=a(e),fs=c(e,!1),xs=a(e),at=p(e,"P",{"data-svelte-h":!0}),i(at)!=="svelte-jio6a8"&&(at.textContent=rp),Ca=a(e),hs=c(e,!1),Fs=cp(),this.h()},h(){Bt.a=vt,ut.a=dt,mt.a=Ct,ft.a=xt,ht.a=Ft,_t.a=At,wt.a=bt,kt.a=Pt,Et.a=qt,Ht.a=Tt,$t.a=Dt,Mt.a=St,jt.a=Lt,Nt.a=zt,Ot.a=It,Vt.a=Wt,Ut.a=Rt,Gt.a=Jt,Yt.a=Xt,Kt.a=Qt,Zt.a=gt,el.a=tl,ll.a=sl,nl.a=al,ol.a=pl,il.a=rl,cl.a=yl,Bl.a=vl,ul.a=dl,ml.a=Cl,fl.a=xl,hl.a=Fl,_l.a=Al,wl.a=bl,kl.a=Pl,El.a=ql,Hl.a=Tl,$l.a=Dl,Ml.a=Sl,jl.a=Ll,Nl.a=zl,Ol.a=Il,Vl.a=Wl,Ul.a=Rl,Gl.a=Jl,Yl.a=Xl,Kl.a=Ql,Zl.a=gl,es.a=ts,ls.a=ss,ns.a=as,os.a=ps,is.a=rs,cs.a=ys,Bs.a=vs,us.a=ds,ms.a=Cs,fs.a=xs,hs.a=Fs},m(e,t){l(e,y,t),l(e,_s,t),l(e,B,t),l(e,As,t),l(e,v,t),l(e,ws,t),it(u,e,t),l(e,bs,t),l(e,d,t),l(e,ks,t),l(e,m,t),l(e,Ps,t),l(e,C,t),l(e,Es,t),l(e,f,t),l(e,qs,t),l(e,x,t),l(e,Hs,t),l(e,h,t),l(e,Ts,t),l(e,F,t),l(e,$s,t),l(e,_,t),l(e,Ds,t),l(e,A,t),l(e,Ms,t),it(w,e,t),l(e,Ss,t),it(b,e,t),l(e,js,t),l(e,k,t),l(e,Ls,t),l(e,P,t),l(e,Ns,t),Bt.m(Bp,e,t),l(e,vt,t),l(e,E,t),l(e,zs,t),ut.m(vp,e,t),l(e,dt,t),l(e,q,t),l(e,Os,t),mt.m(up,e,t),l(e,Ct,t),l(e,H,t),l(e,Is,t),ft.m(dp,e,t),l(e,xt,t),l(e,T,t),l(e,Vs,t),l(e,$,t),l(e,Ws,t),l(e,D,t),l(e,Us,t),l(e,M,t),l(e,Rs,t),ht.m(mp,e,t),l(e,Ft,t),l(e,S,t),l(e,Gs,t),_t.m(Cp,e,t),l(e,At,t),l(e,j,t),l(e,Js,t),wt.m(fp,e,t),l(e,bt,t),it(L,e,t),l(e,Ys,t),l(e,N,t),l(e,Xs,t),kt.m(xp,e,t),l(e,Pt,t),l(e,z,t),l(e,Ks,t),Et.m(hp,e,t),l(e,qt,t),l(e,O,t),l(e,Qs,t),Ht.m(Fp,e,t),l(e,Tt,t),l(e,I,t),l(e,Zs,t),$t.m(_p,e,t),l(e,Dt,t),l(e,V,t),l(e,gs,t),Mt.m(Ap,e,t),l(e,St,t),l(e,W,t),l(e,en,t),l(e,U,t),l(e,tn,t),jt.m(wp,e,t),l(e,Lt,t),l(e,R,t),l(e,ln,t),l(e,G,t),l(e,sn,t),Nt.m(bp,e,t),l(e,zt,t),l(e,J,t),l(e,nn,t),l(e,Y,t),l(e,an,t),Ot.m(kp,e,t),l(e,It,t),l(e,X,t),l(e,on,t),Vt.m(Pp,e,t),l(e,Wt,t),l(e,K,t),l(e,pn,t),l(e,Q,t),l(e,rn,t),l(e,Z,t),l(e,cn,t),l(e,g,t),l(e,yn,t),l(e,ee,t),l(e,Bn,t),Ut.m(Ep,e,t),l(e,Rt,t),l(e,te,t),l(e,vn,t),Gt.m(qp,e,t),l(e,Jt,t),l(e,le,t),l(e,un,t),Yt.m(Hp,e,t),l(e,Xt,t),l(e,se,t),l(e,dn,t),Kt.m(Tp,e,t),l(e,Qt,t),l(e,ne,t),l(e,mn,t),Zt.m($p,e,t),l(e,gt,t),l(e,ae,t),l(e,Cn,t),el.m(Dp,e,t),l(e,tl,t),l(e,oe,t),l(e,fn,t),ll.m(Mp,e,t),l(e,sl,t),it(pe,e,t),l(e,xn,t),l(e,ie,t),l(e,hn,t),l(e,re,t),l(e,Fn,t),l(e,ce,t),l(e,_n,t),nl.m(Sp,e,t),l(e,al,t),l(e,ye,t),l(e,An,t),ol.m(jp,e,t),l(e,pl,t),il.m(Lp,e,t),l(e,rl,t),l(e,Be,t),l(e,wn,t),cl.m(Np,e,t),l(e,yl,t),l(e,ve,t),l(e,bn,t),l(e,ue,t),l(e,kn,t),l(e,de,t),l(e,Pn,t),l(e,me,t),l(e,En,t),l(e,Ce,t),l(e,qn,t),Bl.m(zp,e,t),l(e,vl,t),l(e,fe,t),l(e,Hn,t),ul.m(Op,e,t),l(e,dl,t),l(e,xe,t),l(e,Tn,t),ml.m(Ip,e,t),l(e,Cl,t),l(e,he,t),l(e,$n,t),fl.m(Vp,e,t),l(e,xl,t),l(e,Fe,t),l(e,Dn,t),hl.m(Wp,e,t),l(e,Fl,t),l(e,_e,t),l(e,Mn,t),_l.m(Up,e,t),l(e,Al,t),l(e,Ae,t),l(e,Sn,t),wl.m(Rp,e,t),l(e,bl,t),l(e,we,t),l(e,jn,t),kl.m(Gp,e,t),l(e,Pl,t),l(e,be,t),l(e,Ln,t),El.m(Jp,e,t),l(e,ql,t),l(e,ke,t),l(e,Nn,t),l(e,Pe,t),l(e,zn,t),l(e,Ee,t),l(e,On,t),Hl.m(Yp,e,t),l(e,Tl,t),l(e,qe,t),l(e,In,t),$l.m(Xp,e,t),l(e,Dl,t),l(e,He,t),l(e,Vn,t),l(e,Te,t),l(e,Wn,t),l(e,$e,t),l(e,Un,t),l(e,De,t),l(e,Rn,t),Ml.m(Kp,e,t),l(e,Sl,t),l(e,Me,t),l(e,Gn,t),jl.m(Qp,e,t),l(e,Ll,t),l(e,Se,t),l(e,Jn,t),Nl.m(Zp,e,t),l(e,zl,t),l(e,je,t),l(e,Yn,t),Ol.m(gp,e,t),l(e,Il,t),l(e,Le,t),l(e,Xn,t),Vl.m(ei,e,t),l(e,Wl,t),l(e,Ne,t),l(e,Kn,t),Ul.m(ti,e,t),l(e,Rl,t),it(ze,e,t),l(e,Qn,t),it(Oe,e,t),l(e,Zn,t),l(e,Ie,t),l(e,gn,t),Gl.m(li,e,t),l(e,Jl,t),l(e,Ve,t),l(e,ea,t),l(e,We,t),l(e,ta,t),l(e,Ue,t),l(e,la,t),Yl.m(si,e,t),l(e,Xl,t),l(e,Re,t),l(e,sa,t),Kl.m(ni,e,t),l(e,Ql,t),l(e,Ge,t),l(e,na,t),Zl.m(ai,e,t),l(e,gl,t),l(e,Je,t),l(e,aa,t),es.m(oi,e,t),l(e,ts,t),ls.m(pi,e,t),l(e,ss,t),l(e,Ye,t),l(e,oa,t),ns.m(ii,e,t),l(e,as,t),l(e,Xe,t),l(e,pa,t),os.m(ri,e,t),l(e,ps,t),l(e,Ke,t),l(e,ia,t),is.m(ci,e,t),l(e,rs,t),l(e,Qe,t),l(e,ra,t),cs.m(yi,e,t),l(e,ys,t),l(e,Ze,t),l(e,ca,t),Bs.m(Bi,e,t),l(e,vs,t),l(e,ge,t),l(e,ya,t),l(e,et,t),l(e,Ba,t),l(e,tt,t),l(e,va,t),l(e,lt,t),l(e,ua,t),us.m(vi,e,t),l(e,ds,t),l(e,st,t),l(e,da,t),ms.m(ui,e,t),l(e,Cs,t),l(e,nt,t),l(e,ma,t),fs.m(di,e,t),l(e,xs,t),l(e,at,t),l(e,Ca,t),hs.m(mi,e,t),l(e,Fs,t),fa=!0},p:fi,i(e){fa||(rt(u.$$.fragment,e),rt(w.$$.fragment,e),rt(b.$$.fragment,e),rt(L.$$.fragment,e),rt(pe.$$.fragment,e),rt(ze.$$.fragment,e),rt(Oe.$$.fragment,e),fa=!0)},o(e){ct(u.$$.fragment,e),ct(w.$$.fragment,e),ct(b.$$.fragment,e),ct(L.$$.fragment,e),ct(pe.$$.fragment,e),ct(ze.$$.fragment,e),ct(Oe.$$.fragment,e),fa=!1},d(e){e&&(s(y),s(_s),s(B),s(As),s(v),s(ws),s(bs),s(d),s(ks),s(m),s(Ps),s(C),s(Es),s(f),s(qs),s(x),s(Hs),s(h),s(Ts),s(F),s($s),s(_),s(Ds),s(A),s(Ms),s(Ss),s(js),s(k),s(Ls),s(P),s(Ns),Bt.d(),s(vt),s(E),s(zs),ut.d(),s(dt),s(q),s(Os),mt.d(),s(Ct),s(H),s(Is),ft.d(),s(xt),s(T),s(Vs),s($),s(Ws),s(D),s(Us),s(M),s(Rs),ht.d(),s(Ft),s(S),s(Gs),_t.d(),s(At),s(j),s(Js),wt.d(),s(bt),s(Ys),s(N),s(Xs),kt.d(),s(Pt),s(z),s(Ks),Et.d(),s(qt),s(O),s(Qs),Ht.d(),s(Tt),s(I),s(Zs),$t.d(),s(Dt),s(V),s(gs),Mt.d(),s(St),s(W),s(en),s(U),s(tn),jt.d(),s(Lt),s(R),s(ln),s(G),s(sn),Nt.d(),s(zt),s(J),s(nn),s(Y),s(an),Ot.d(),s(It),s(X),s(on),Vt.d(),s(Wt),s(K),s(pn),s(Q),s(rn),s(Z),s(cn),s(g),s(yn),s(ee),s(Bn),Ut.d(),s(Rt),s(te),s(vn),Gt.d(),s(Jt),s(le),s(un),Yt.d(),s(Xt),s(se),s(dn),Kt.d(),s(Qt),s(ne),s(mn),Zt.d(),s(gt),s(ae),s(Cn),el.d(),s(tl),s(oe),s(fn),ll.d(),s(sl),s(xn),s(ie),s(hn),s(re),s(Fn),s(ce),s(_n),nl.d(),s(al),s(ye),s(An),ol.d(),s(pl),il.d(),s(rl),s(Be),s(wn),cl.d(),s(yl),s(ve),s(bn),s(ue),s(kn),s(de),s(Pn),s(me),s(En),s(Ce),s(qn),Bl.d(),s(vl),s(fe),s(Hn),ul.d(),s(dl),s(xe),s(Tn),ml.d(),s(Cl),s(he),s($n),fl.d(),s(xl),s(Fe),s(Dn),hl.d(),s(Fl),s(_e),s(Mn),_l.d(),s(Al),s(Ae),s(Sn),wl.d(),s(bl),s(we),s(jn),kl.d(),s(Pl),s(be),s(Ln),El.d(),s(ql),s(ke),s(Nn),s(Pe),s(zn),s(Ee),s(On),Hl.d(),s(Tl),s(qe),s(In),$l.d(),s(Dl),s(He),s(Vn),s(Te),s(Wn),s($e),s(Un),s(De),s(Rn),Ml.d(),s(Sl),s(Me),s(Gn),jl.d(),s(Ll),s(Se),s(Jn),Nl.d(),s(zl),s(je),s(Yn),Ol.d(),s(Il),s(Le),s(Xn),Vl.d(),s(Wl),s(Ne),s(Kn),Ul.d(),s(Rl),s(Qn),s(Zn),s(Ie),s(gn),Gl.d(),s(Jl),s(Ve),s(ea),s(We),s(ta),s(Ue),s(la),Yl.d(),s(Xl),s(Re),s(sa),Kl.d(),s(Ql),s(Ge),s(na),Zl.d(),s(gl),s(Je),s(aa),es.d(),s(ts),ls.d(),s(ss),s(Ye),s(oa),ns.d(),s(as),s(Xe),s(pa),os.d(),s(ps),s(Ke),s(ia),is.d(),s(rs),s(Qe),s(ra),cs.d(),s(ys),s(Ze),s(ca),Bs.d(),s(vs),s(ge),s(ya),s(et),s(Ba),s(tt),s(va),s(lt),s(ua),us.d(),s(ds),s(st),s(da),ms.d(),s(Cs),s(nt),s(ma),fs.d(),s(xs),s(at),s(Ca),s(Fs),hs.d()),yt(u,e),yt(w,e),yt(b,e),yt(L,e),yt(pe,e),yt(ze,e),yt(Oe,e)}}}const ki={title:"Building Python and Node.JS environments",description:"Create a clean development environment for high productivity",date:"2022-9-20",image:"/images/npm-keyboard.jpg",categories:["Python","Node","Chocolatey","Homebrew"],published:!0};class Pi extends xi{constructor(y){super(),hi(this,y,null,Fi,Ci,{})}}export{Pi as default,ki as metadata};
