import{s as Kl,n as xn}from"./scheduler.ae1baad1.js";import{S as Vl,i as Gl,g as o,h as i,j as bn,f as t,k as Jl,a as n,C as ga,m as Il,n as Sl,x as Cn,o as Nl,s as l,r as un,H as m,z as p,c as a,u as hn,D as f,v as Bn,d as Fn,t as vn,w as wn}from"./index.0e1198e2.js";import{e as Ol}from"./each.e59479a4.js";function Wl(h,d,u){const c=h.slice();return c[1]=d[u],c}function Rl(h){let d,u,c=h[1].cmd+"",r,B,y=h[1].desc+"",F;return{c(){d=o("dt"),u=o("code"),r=Il(c),B=o("dd"),F=Il(y),this.h()},l(v){d=i(v,"DT",{class:!0});var w=bn(d);u=i(w,"CODE",{});var A=bn(u);r=Sl(A,c),A.forEach(t),w.forEach(t),B=i(v,"DD",{});var Se=bn(B);F=Sl(Se,y),Se.forEach(t),this.h()},h(){Jl(d,"class","svelte-1sq4o2n")},m(v,w){n(v,d,w),Cn(d,u),Cn(u,r),n(v,B,w),Cn(B,F)},p(v,w){w&1&&c!==(c=v[1].cmd+"")&&Nl(r,c),w&1&&y!==(y=v[1].desc+"")&&Nl(F,y)},d(v){v&&(t(d),t(B))}}}function ka(h){let d,u=Ol(h[0]),c=[];for(let r=0;r<u.length;r+=1)c[r]=Rl(Wl(h,u,r));return{c(){d=o("dl");for(let r=0;r<c.length;r+=1)c[r].c();this.h()},l(r){d=i(r,"DL",{class:!0});var B=bn(d);for(let y=0;y<c.length;y+=1)c[y].l(B);B.forEach(t),this.h()},h(){Jl(d,"class","svelte-1sq4o2n")},m(r,B){n(r,d,B);for(let y=0;y<c.length;y+=1)c[y]&&c[y].m(d,null)},p(r,[B]){if(B&1){u=Ol(r[0]);let y;for(y=0;y<u.length;y+=1){const F=Wl(r,u,y);c[y]?c[y].p(F,B):(c[y]=Rl(F),c[y].c(),c[y].m(d,null))}for(;y<c.length;y+=1)c[y].d(1);c.length=u.length}},i:xn,o:xn,d(r){r&&t(d),ga(c,r)}}}function Ta(h,d,u){let{array:c}=d;return h.$$set=r=>{"array"in r&&u(0,c=r.array)},[c]}class An extends Vl{constructor(d){super(),Gl(this,d,Ta,ka,Kl,{array:0})}}function Ea(h){let d,u='<img src="/images/linux-debian.jpg" alt="Linux Debian command line"/>',c,r,B="Contents",y,F,v='<li><a href="#introduction">Introduction</a></li> <li><a href="#basic-utilities">Basic utilities</a></li> <li><a href="#command-pipeline">Command pipeline</a></li> <li><a href="#navigating-the-filesystem">Navigating the filesystem</a></li> <li><a href="#working-with-files">Working with files</a></li> <li><a href="#searching-for-files">Searching for files</a></li> <li><a href="#package-managers">Package managers</a></li> <li><a href="#accessing-documentation">Accessing documentation</a></li> <li><a href="#processes">Processes</a></li> <li><a href="#file-operations">File operations</a></li> <li><a href="#text-editors">Text editors</a></li> <li><a href="#user-environment">User environment</a></li> <li><a href="#manipulating-text">Manipulating text</a></li> <li><a href="#networking-operations">Network operations</a></li> <li><a href="#credits">Credits</a></li>',w,A,Se='<a id="introduction">Introduction</a>',Gs,b,_n="Linux was created by Linus Torvalds in 1991 as a free alternative to Unix. Though similar, Linux is technically a Unix clone, not a direct descendant like macOS. For this reason, many of the same commands can be used interchangably on Mac and Linux systems.",Js,C,gn='<a id="basic-utilities">Basic utilities</a>',Zs,x,kn="Below is a selection of common command line utilities:",Qs,_,Xs,g,Tn="A command is the name of the program being executed. Many commands accept arguments and options, the latter often preceded with one or two dashes, e.g., <code>-p</code> or <code>--print</code>, to be distinguishable.",Ys,k,En="Users have several options to shutdown or reboot the system from the command line:",et,Ne,Zl=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># power off system without rebooting</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">shutdown</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-h</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># alternative commands that issue shutdown</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">halt</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">poweroff</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># reboot the system</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">shutdown</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-r</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># reboot alternative</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">reboot</span></span></code></pre>`,Oe,T,Ln='<a id="command-pipeline">Command pipeline</a>',st,E,Hn="The Unix/Linux philosophy is to combine multiple short programs to produce complex results. To achieve this coordination, data (output) from one program may be “piped” into another using the | command. A string of connected commands is called a pipeline.",tt,We,Ql='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">command1</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">command2</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">command3</span></span></code></pre>',Re,L,Mn="In the above example, command2 and command3 can start acting on output from previous commands in the pipeline while those commands are still being executed. This feature utilizes the multicore functionality of modern computer systems and does not require data to be written to temporary files.",nt,H,Pn='<a id="navigating-the-filesystem">Navigating the filesystem</a>',lt,M,Dn="Locate programs with the <code>which</code> or <code>whereis</code> utilities, the latter of which searches across a broader range of system directories and also prints the location of the man page:",at,Ke,Xl=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">which</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">program</span></span>
<span class="line"><span style="color: #61AFEF">whereis</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">program</span></span></code></pre>`,Ve,P,qn="Use <code>cd</code> to navigate directories:",ot,Ge,Yl=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># change to home directory</span></span>
<span class="line"><span style="color: #56B6C2">cd</span></span>
<span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">~</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># change to root directory</span></span>
<span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># change to parent directory</span></span>
<span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">..</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># change to previous directory</span></span>
<span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">-</span></span></code></pre>`,Je,D,$n="When referencing pathnames, remember that absolute pathnames must be preceded by <code>/</code>:",it,Ze,ea=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr/bin</span></span>
<span class="line"><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">../../usr/bin</span></span></code></pre>`,Qe,q,jn="Use the <code>tree</code> command to view the entire filesystem (note that this command may have to be installed with snap):",pt,Xe,sa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># the -d option displays directories while suppressing file names</span></span>
<span class="line"><span style="color: #61AFEF">tree</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-d</span></span></code></pre>`,Ye,$,zn="The <code>ls</code> command lists the contents of the working directory:",ct,es,ta=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">ls</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># present in list view</span></span>
<span class="line"><span style="color: #61AFEF">ls</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-l</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># include hidden files</span></span>
<span class="line"><span style="color: #61AFEF">ls</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-a</span></span></code></pre>`,ss,j,Un="Use <code>pushd</code> to navigate the filesystem and store visited directories to a stack for later reference:",rt,ts,na=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">pwd</span></span>
<span class="line"><span style="color: #61AFEF">/usr</span></span>
<span class="line"><span style="color: #ABB2BF">pushd bin</span></span>
<span class="line"><span style="color: #61AFEF">/usr/bin</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr</span></span></code></pre>`,ns,z,In="Similarly, use <code>popd</code> to revisit previous directories in reverse order. The <code>dirs</code> command prints a list of recent directories stacked with <code>pushd</code>.",dt,U,Sn='<a id="working-with-files">Working with files</a>',yt,I,Nn="There are many command line utilities for viewing and reconfiguring files.",mt,ls,la=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># print file contents in terminal window</span></span>
<span class="line"><span style="color: #61AFEF">cat</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># print file contents with line numbers</span></span>
<span class="line"><span style="color: #61AFEF">cat</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-n</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># print file contents in reverse</span></span>
<span class="line"><span style="color: #61AFEF">tac</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span></code></pre>`,as,S,On="To see one page of text at a time, use the <code>less</code> command and press the spacebar to move through the file.",ft,os,aa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># show one page of text</span></span>
<span class="line"><span style="color: #61AFEF">less</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># show one page of text with line numbers</span></span>
<span class="line"><span style="color: #61AFEF">less</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-N</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span></code></pre>`,is,N,Wn="The <code>head</code> and <code>tail</code> commands display the first or last 10 lines of a file, respectively.",ut,ps,oa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># show first 10 lines</span></span>
<span class="line"><span style="color: #61AFEF">head</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># specify number of lines</span></span>
<span class="line"><span style="color: #61AFEF">head</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-20</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># show last 10 lines</span></span>
<span class="line"><span style="color: #61AFEF">tail</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># specify number of lines</span></span>
<span class="line"><span style="color: #61AFEF">tail</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-20</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span></code></pre>`,cs,O,Rn="The <code>touch</code> utility is commonly used to create new files for later usage, but can also update/modify the timestamp of an existing file.",ht,rs,ia=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># create new file in current directory</span></span>
<span class="line"><span style="color: #61AFEF">touch</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># update the date and timestamp of an existing file</span></span>
<span class="line"><span style="color: #61AFEF">touch</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># modify the date and timestamp of an existing file MM DD TIME</span></span>
<span class="line"><span style="color: #61AFEF">touch</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-t</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">01011200</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span></code></pre>`,ds,W,Kn="Use <code>mkdir</code> and <code>rmdir</code> to manage directories.",Bt,ys,pa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># create new local directory</span></span>
<span class="line"><span style="color: #61AFEF">mkdir</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">dirname</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># create new directory with specific path</span></span>
<span class="line"><span style="color: #61AFEF">mkdir</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">dirpath</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># delete an empty directory</span></span>
<span class="line"><span style="color: #61AFEF">rm</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">dirname</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># delete a directory with contents</span></span>
<span class="line"><span style="color: #61AFEF">rm</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-rf</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">dirname</span></span></code></pre>`,ms,R,Vn="The <code>mv</code> utility can both rename and relocate files.",Ft,fs,ca=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># rename existing file</span></span>
<span class="line"><span style="color: #61AFEF">mv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">new-filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># relocate file</span></span>
<span class="line"><span style="color: #61AFEF">mv</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">new-filepath</span></span></code></pre>`,us,K,Gn='<a id="searching-for-files">Searching for files</a>',vt,V,Jn="When interacting with the command line, there are always three standard file streams in operation: <code>stdin</code>, <code>stdout</code>, and <code>stderr</code>. Usually, <code>stdin</code> captures user input while <code>stdout</code> and <code>stderr</code> print feedback via the terminal, though <code>stderr</code> often targets an error logging file. The user can redirect these file streams to pipe data between various files and programs.",wt,G,Zn="The input source and output destination of a program can be changed with the <code>&lt;</code> and <code>&gt;</code> symbols, respectively:",At,hs,ra=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># redirect program input</span></span>
<span class="line"><span style="color: #61AFEF">do_something</span><span style="color: #ABB2BF"> &lt; </span><span style="color: #98C379">input-file</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># send output to file</span></span>
<span class="line"><span style="color: #61AFEF">do_something</span><span style="color: #ABB2BF"> &gt; </span><span style="color: #98C379">output-file</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># send stderr output to file</span></span>
<span class="line"><span style="color: #61AFEF">do_something</span><span style="color: #ABB2BF"> 2&gt; </span><span style="color: #98C379">output-file</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># send all output to same destination file</span></span>
<span class="line"><span style="color: #61AFEF">do_something</span><span style="color: #ABB2BF"> &gt; </span><span style="color: #98C379">output-file</span><span style="color: #ABB2BF"> 2&gt;&amp;1</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># shorthand syntax</span></span>
<span class="line"><span style="color: #61AFEF">do_something</span><span style="color: #ABB2BF"> &gt;&amp; </span><span style="color: #98C379">output-file</span></span></code></pre>`,Bs,J,Qn="To search for files and directories that contain a specific string, use the <code>locate</code> command in combination with <code>grep</code> for further filtering. Alternatively, the <code>find</code> command can be used to locate files (or directories) after specifying the search directory, where working directory is the default, and adding the <code>-name</code> parameter alongside the search string. Note: without any arguments, <code>-name</code> outputs all files in the current and nested directories.",bt,Fs,da=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># list all files with zip and bin in their name</span></span>
<span class="line"><span style="color: #61AFEF">locate</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">zip</span><span style="color: #ABB2BF"> | </span><span style="color: #61AFEF">grep</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">bin</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># use find to search for a file in the current working directory</span></span>
<span class="line"><span style="color: #61AFEF">find</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-name</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;zip&quot;</span></span></code></pre>`,vs,Z,Xn="With these commands, it is often useful to employ wildcards:",Ct,Q,xt,X,Yn="For example, to find a file that has “ba” followed by a third unknown character, with extension <code>.out</code>, search for <code>ba?.out</code>. Similarly, if the entire name is unknown, search for <code>*.out</code>. Putting the search criteria in quotes will expand the search beyond the working directory: <code>ls &quot;*.out&quot;</code>.",_t,Y,el="Using the <code>-exec</code> parameter, the <code>find</code> utility can also run other commands on the search results:",gt,ws,ya=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># find and remove all files with extension .swp</span></span>
<span class="line"><span style="color: #61AFEF">find</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-name</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;*.swp&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-exec</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">rm</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#123;&#125;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;;&#39;</span></span></code></pre>`,As,ee,sl='<a id="package-managers">Package managers</a>',kt,se,tl="There are two broad families of package managers for Debian and RPM distributions. Each family has a high-level tool, e.g., <code>apt</code>, <code>dnf</code>, <code>zypper</code>, that manage low-level utilities, e.g., <code>dpkg</code>, <code>rpm</code>, which are responsible for unpacking and installing individual packages. These high-level tools also coordinate the installation of dependencies, or packages that are needed to support the current installation.",Tt,te,nl="Some common package management commands for Debian-based distros include:",Et,bs,ma=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># list all packages on system</span></span>
<span class="line"><span style="color: #61AFEF">dpkg</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--list</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># install (or update) package and dependencies</span></span>
<span class="line"><span style="color: #61AFEF">apt-get</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">foo</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># remove package and dependencies</span></span>
<span class="line"><span style="color: #61AFEF">apt-get</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">remove</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">foo</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># upgrade entire system</span></span>
<span class="line"><span style="color: #61AFEF">apt-get</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">dist-upgrade</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># search packages named foo</span></span>
<span class="line"><span style="color: #61AFEF">apt-cache</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">search</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">foo</span></span></code></pre>`,Cs,ne,ll='<a id="accessing-documentation">Accessing documentation</a>',Lt,le,al="The general philosophy of computer administration is to not memorize every single shell command along with its parameters. Instead, administrators can reference the <code>man</code> pages—short for “manual”—or utilize either the <code>help</code> command or <code>--help</code> option.",Ht,xs,fa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># find information about a specific topic</span></span>
<span class="line"><span style="color: #61AFEF">man</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">topic</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># list all pages on topic</span></span>
<span class="line"><span style="color: #61AFEF">man</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-f</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">topic</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># alternatively...</span></span>
<span class="line"><span style="color: #61AFEF">whatis</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">topic</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># list all pages that discuss a topic (yields more results)</span></span>
<span class="line"><span style="color: #61AFEF">man</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-k</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">topic</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># alternatively...</span></span>
<span class="line"><span style="color: #61AFEF">apropos</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">topic</span></span></code></pre>`,_s,ae,ol="While <code>man</code> is a great tool for reading detailed information about specific utilities, often administrators only need a brief description. This can be accomplished using <code>--help</code> or <code>-h</code>:",Mt,gs,ua=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># find information on the man command</span></span>
<span class="line"><span style="color: #61AFEF">man</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--help</span></span></code></pre>`,ks,oe,il="Typing <code>help</code> at the command line will print consolidated information about built-in commands.",Pt,ie,pl='<a id="processes">Processes</a>',Dt,pe,cl="A process represents a current task running on the computer. Single commands may launch one or more processes simultaneously. The operating system is responsible for allocating system resources to each process for optimized performance. There are several types of processes:",qt,ce,rl="<li><strong>Interactive:</strong> started by the user via the command line or graphical interface</li> <li><strong>Batch:</strong> automated processes that require queued resource allocation on a first-in, first-out (FIFO) basis</li> <li><strong>Daemons:</strong> server processes that run continuously in the background</li> <li><strong>Threads:</strong> lightweight processes that run under a main process, sharing a designated number of resources</li> <li><strong>Kernel threads:</strong> perform housekeeping tasks such as relocating threads between CPU cores</li>",$t,re,dl="The kernel <strong>scheduler</strong> allocates CPU time to queued processes. Each CPU core has a run and wait queue. When a process enters a <strong>sleep</strong> state, the scheduler moves it to the wait queue until the necessary feedback is received. To manage process scheduling and resource allocation, the operating system assigns each running process a unique process ID <strong>(PID)</strong> number, which Usually follow the order that each process was born in the system. In addition, each process has a parent process ID <strong>(PPID)</strong> and, if the process is multithreaded, a unique thread ID <strong>(TID)</strong>.",jt,de,yl="Users can terminate processes in the terminal shell:",zt,Ts,ha=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># kill process</span></span>
<span class="line"><span style="color: #56B6C2">kill</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-SIGKILL</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pid</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># alternatively...</span></span>
<span class="line"><span style="color: #56B6C2">kill</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-9</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pid</span></span></code></pre>`,Es,ye,ml="Users can also specify a <strong>nice value</strong> for individual processes to control their execution priority. The lower the nice value, the more preference will be given this process over system resources and runtime. Linux nice values range from -20 to +19, with -20 designating the highest priority, or precedence. Note that changing the niceness of a process will also update any child processes with the same value. Increasing niceness may require superuser permissions.",Ut,Ls,Ba=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># change the niceness value</span></span>
<span class="line"><span style="color: #61AFEF">renice</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">value</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">pid</span></span></code></pre>`,Hs,me,fl="The <strong>load average</strong> breaks down CPU resource consumption over three specified timepoints: 45, 15, and 5 min. These percentages denote the amount of CPU resources demanded by active processes. For example, a load average of 0.5 means that an average of 50% CPU resources were consumed for the specified time period.",It,fe,ul="With modern machines, each load average should be divided by the number of CPU cores, e.g., a load average of 2.0 for a dual-core system indicates 100% CPU resource consumption. It is possible for normalized load averages to exceed 1.0 for brief periods, but prolonged over-utilization may suggest problems. Load averages may be viewed in the terminal by running either <code>w</code>, <code>top</code>, or <code>uptime</code>.",St,ue,hl="Jobs, or terminal commands, may be run in the foreground or background. Foreground jobs may be suspended with <code>CTRL+Z</code> or terminated with <code>CTRL+C</code>. Suffixing a command with <code>&amp;</code> causes it to be executed in the background. Alternatively, the <code>bg</code> and <code>fg</code> commands can push jobs to the background or foreground, respectively.",Nt,Ms,Fa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># view active background jobs</span></span>
<span class="line"><span style="color: #56B6C2">jobs</span></span></code></pre>`,Ps,he,Bl="The <code>ps</code> command prints information about current running processes:",Ot,Ds,va=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># display all processes running under current shell</span></span>
<span class="line"><span style="color: #61AFEF">ps</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># include PPID</span></span>
<span class="line"><span style="color: #61AFEF">ps</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-f</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># include full system detail</span></span>
<span class="line"><span style="color: #61AFEF">ps</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-ef</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># show one line of information for every thread</span></span>
<span class="line"><span style="color: #61AFEF">ps</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-elf</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># display as tree diagram to show process lineage</span></span>
<span class="line"><span style="color: #61AFEF">pstree</span></span></code></pre>`,qs,Be,Fl="In addition to printing load averages, the <code>top</code> command presents a real-time system monitor of all processes, listed in order of CPU resource consumption. The list constantly updates until the user quits with <code>q</code>. Other interactive options for top include:",Wt,Fe,Rt,ve,vl="Various commands exist to manage future program execution and suspend currently active processes:",Kt,$s,wa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># schedule non-interactive process to execute in 10 minutes</span></span>
<span class="line"><span style="color: #61AFEF">at</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">now</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">+</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">10</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">minutes</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># issue command to be executed, then press CTRL-D to exit at config</span></span>
<span class="line"><span style="color: #56B6C2">command</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">arguments</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># sleep active program for 10 seconds</span></span>
<span class="line"><span style="color: #61AFEF">sleep</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">10</span><span style="color: #98C379">s</span></span></code></pre>`,js,we,wl='<a id="file-operations">File operations</a>',Vt,Ae,Al="In the Linux, the root directory, denoted by <code>/</code>, represents the beginning of the filesystem hierarchy. There are many types of filesystems, which often differ across operating systems, but the most common belong to the <strong>journaling</strong> variety: ext4, xfs, btrfs, jfs. It is often the case that an OS will have several different filesystems, each stored on a particular disk partition. Important programs to run the system are isolated on the <strong>root</strong> partition. Each partition has to be mounted on the filesystem tree to be accessible by the user. Examples of common mount points, which appear as empty directories, include <code>/</code>, <code>/home</code>, and <code>/var</code>.",Gt,be,bl="Partitions can be mounted through a graphical utility, such as <code>gparted</code>, or the command line with the device node and mount point as the arguments:",Jt,zs,Aa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># mount the filesystem at device node /dev/sda5 into the main filesystem tree at mount point /home</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">mount</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/dev/sda5</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/home</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># unmount the partition</span></span>
<span class="line"><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">umount</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/home</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># show all mounted filesystems</span></span>
<span class="line"><span style="color: #61AFEF">mount</span></span></code></pre>`,Us,Ce,Cl="Filesystems and data can also be shared across machines through networks. Networks, accessible over the internet, allow grouping of lower-level filesystems into a more universal framework, e.g., the Network Filesystem (<strong>NFS</strong>). For all intensive purposes, NFS can be treated as an other filesystem on the client or server side.",Zt,xe,xl="Each user has a home directory listed under <code>/home</code>. The <code>/root</code> directory is simply the home of the root user (aka superuser or system administrator). The <code>/bin</code> directory contains executable binaries needed to boot the system as well as ubiquitous user commands, such as <code>cat</code>, <code>cp</code>, <code>ls</code>, etc. Though similar, <code>/sbin</code> stores executables for system administration, such as <code>ip</code>.",Qt,_e,_l="Non-essential commands are stored under <code>/usr/bin</code> and <code>/usr/sbin</code>, which was initially done to allow mounting of the user filesystem at a later stage in the OS startup. However, this practice is mostly considered obselete and, as such, most modern Linux distros symbolically link <code>/usr/bin</code> with <code>/bin</code> and <code>/usr/sbin</code> with <code>/sbin</code>, i.e., for all intensive purposes, there are no distinctions between these directory groupings.",Xt,ge,gl="The <code>/proc</code> filesystem contains <strong>virtual files</strong>—files that only exist in memory—that track dynamic kernel data, including information about mounted devices, hardware configurations, CPU, etc. This directory is considered a <strong>pseudo filesystem</strong> because it occupies no permanent space in storage.",Yt,ke,kl="The <code>/dev</code> directory becomes populated with <code>device nodes</code> as devices, e.g., printers, are connected to the computer. Similarly, <code>/var</code> is a dynamic directory of sorts as it contains files that are expected to change in size, e.g., system log files (<code>/var/log</code>), packages and database files (<code>/var/lib</code>), and temporary files (<code>/var/tmp</code>).",en,Te,Tl="The <code>/etc</code> directory is home to system configuration files that can only be modified by the superuser. Likewise, the <code>/boot</code> directory contains essential files needed to boot the system, which are kernel-specific. Libraries needed for binary executables are stored in <code>/lib</code> (32-bit) and <code>/lib64</code> (64-bit). Removable media files, such as the contents of a connected USB drive, are typically accessible under the <code>/run/media/usrname/</code> directory.",sn,Ee,El="There are other directories listed under <code>/root</code>, as well as an entire directory tree under <code>/usr</code> that contains a host of programs and scripts not needed to boot or manage the system.",tn,Le,Ll="Comparing text files can be done with the <code>diff</code> command:",nn,Is,ba=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># compare differences between two text files</span></span>
<span class="line"><span style="color: #61AFEF">diff</span><span style="color: #ABB2BF"> [options] filename1 filename2</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># compare differences between three text files, with one acting as a reference</span></span>
<span class="line"><span style="color: #61AFEF">diff3</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename1</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">referencefile</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename2</span></span></code></pre>`,Ss,He,Hl="This utility provides several options:",ln,Me,an,Pe,Ml="Unlike other operating systems, Linux does not rely on file extensions to direct operations, e.g., a file with the “.txt” extension could be a binary executable. Users can employ the <code>file</code> utility to ascertain file type and other important information.",on,Ns,Ca=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># ascertain file type</span></span>
<span class="line"><span style="color: #61AFEF">file</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">filename</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># find detailed information about all files in working directory</span></span>
<span class="line"><span style="color: #61AFEF">file</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">*</span></span></code></pre>`,Os,De,Pl="Data can be backed up using the <code>cp</code> or <code>rsync</code> utilities. While the <code>cp</code> command copies files from one destination to another on a local machine, <code>rsync</code> performs recursive operations to only copy modified data, i.e., existing files may not be entirely overwritten. The <code>rsync</code> utility can also copy data across remote machines.",pn,Ws,xa=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># copy file to new location</span></span>
<span class="line"><span style="color: #61AFEF">rsync</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">sourcefile</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">destinationfile</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># back up project data to remote archive</span></span>
<span class="line"><span style="color: #61AFEF">rsync</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-r</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">project</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">networked-machine:archives/project</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># perform a dry run to prevent unwanted overwrites</span></span>
<span class="line"><span style="color: #61AFEF">rsync</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-r</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-dry-run</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">project</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">networked-machine:archives/project</span></span></code></pre>`,Rs,qe,Dl="There are several Linux utilities for managing data compression: <code>gzip</code>, <code>bzip2</code> (deprecated), <code>xz</code>. Each of these utilities employ different compression algorithms and, not surprisingly, the utilities which produce smaller files require longer amounts of time. A similar program, <code>tar</code>, compresses files grouped in an archive. Lastly, <code>zip</code> is a legacy utility specifically used to decompress zipped files from a Windows machine—though it also has compression functionality.",cn,Ks,_a=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># compress files in current directory</span></span>
<span class="line"><span style="color: #61AFEF">gzip</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">*</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># recursively compress files in specified project directory</span></span>
<span class="line"><span style="color: #61AFEF">gzip</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-r</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">projectdir</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># decompress file foo.gz</span></span>
<span class="line"><span style="color: #61AFEF">gzip</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-d</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">foo</span></span>
<span class="line"><span style="color: #61AFEF">gunzip</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">foo</span></span></code></pre>`,Vs,$e,ql='<a id="text-editors">Text editors</a>',rn,je,$l='<a id="user-environment">User environment</a>',dn,ze,jl='<a id="manipulating-text">Manipulating text</a>',yn,Ue,zl='<a id="networking-operations">Networking operations</a>',mn,Ie,Ul='<a id="credits">Credits</a>',fn;return _=new An({props:{array:h[0]}}),Q=new An({props:{array:h[1]}}),Fe=new An({props:{array:h[2]}}),Me=new An({props:{array:h[3]}}),{c(){d=o("p"),d.innerHTML=u,c=l(),r=o("h2"),r.textContent=B,y=l(),F=o("ul"),F.innerHTML=v,w=l(),A=o("h2"),A.innerHTML=Se,Gs=l(),b=o("p"),b.textContent=_n,Js=l(),C=o("h2"),C.innerHTML=gn,Zs=l(),x=o("p"),x.textContent=kn,Qs=l(),un(_.$$.fragment),Xs=l(),g=o("p"),g.innerHTML=Tn,Ys=l(),k=o("p"),k.textContent=En,et=l(),Ne=new m(!1),Oe=l(),T=o("h2"),T.innerHTML=Ln,st=l(),E=o("p"),E.textContent=Hn,tt=l(),We=new m(!1),Re=l(),L=o("p"),L.textContent=Mn,nt=l(),H=o("h2"),H.innerHTML=Pn,lt=l(),M=o("p"),M.innerHTML=Dn,at=l(),Ke=new m(!1),Ve=l(),P=o("p"),P.innerHTML=qn,ot=l(),Ge=new m(!1),Je=l(),D=o("p"),D.innerHTML=$n,it=l(),Ze=new m(!1),Qe=l(),q=o("p"),q.innerHTML=jn,pt=l(),Xe=new m(!1),Ye=l(),$=o("p"),$.innerHTML=zn,ct=l(),es=new m(!1),ss=l(),j=o("p"),j.innerHTML=Un,rt=l(),ts=new m(!1),ns=l(),z=o("p"),z.innerHTML=In,dt=l(),U=o("h2"),U.innerHTML=Sn,yt=l(),I=o("p"),I.textContent=Nn,mt=l(),ls=new m(!1),as=l(),S=o("p"),S.innerHTML=On,ft=l(),os=new m(!1),is=l(),N=o("p"),N.innerHTML=Wn,ut=l(),ps=new m(!1),cs=l(),O=o("p"),O.innerHTML=Rn,ht=l(),rs=new m(!1),ds=l(),W=o("p"),W.innerHTML=Kn,Bt=l(),ys=new m(!1),ms=l(),R=o("p"),R.innerHTML=Vn,Ft=l(),fs=new m(!1),us=l(),K=o("h2"),K.innerHTML=Gn,vt=l(),V=o("p"),V.innerHTML=Jn,wt=l(),G=o("p"),G.innerHTML=Zn,At=l(),hs=new m(!1),Bs=l(),J=o("p"),J.innerHTML=Qn,bt=l(),Fs=new m(!1),vs=l(),Z=o("p"),Z.textContent=Xn,Ct=l(),un(Q.$$.fragment),xt=l(),X=o("p"),X.innerHTML=Yn,_t=l(),Y=o("p"),Y.innerHTML=el,gt=l(),ws=new m(!1),As=l(),ee=o("h2"),ee.innerHTML=sl,kt=l(),se=o("p"),se.innerHTML=tl,Tt=l(),te=o("p"),te.textContent=nl,Et=l(),bs=new m(!1),Cs=l(),ne=o("h2"),ne.innerHTML=ll,Lt=l(),le=o("p"),le.innerHTML=al,Ht=l(),xs=new m(!1),_s=l(),ae=o("p"),ae.innerHTML=ol,Mt=l(),gs=new m(!1),ks=l(),oe=o("p"),oe.innerHTML=il,Pt=l(),ie=o("h2"),ie.innerHTML=pl,Dt=l(),pe=o("p"),pe.textContent=cl,qt=l(),ce=o("ul"),ce.innerHTML=rl,$t=l(),re=o("p"),re.innerHTML=dl,jt=l(),de=o("p"),de.textContent=yl,zt=l(),Ts=new m(!1),Es=l(),ye=o("p"),ye.innerHTML=ml,Ut=l(),Ls=new m(!1),Hs=l(),me=o("p"),me.innerHTML=fl,It=l(),fe=o("p"),fe.innerHTML=ul,St=l(),ue=o("p"),ue.innerHTML=hl,Nt=l(),Ms=new m(!1),Ps=l(),he=o("p"),he.innerHTML=Bl,Ot=l(),Ds=new m(!1),qs=l(),Be=o("p"),Be.innerHTML=Fl,Wt=l(),un(Fe.$$.fragment),Rt=l(),ve=o("p"),ve.textContent=vl,Kt=l(),$s=new m(!1),js=l(),we=o("h2"),we.innerHTML=wl,Vt=l(),Ae=o("p"),Ae.innerHTML=Al,Gt=l(),be=o("p"),be.innerHTML=bl,Jt=l(),zs=new m(!1),Us=l(),Ce=o("p"),Ce.innerHTML=Cl,Zt=l(),xe=o("p"),xe.innerHTML=xl,Qt=l(),_e=o("p"),_e.innerHTML=_l,Xt=l(),ge=o("p"),ge.innerHTML=gl,Yt=l(),ke=o("p"),ke.innerHTML=kl,en=l(),Te=o("p"),Te.innerHTML=Tl,sn=l(),Ee=o("p"),Ee.innerHTML=El,tn=l(),Le=o("p"),Le.innerHTML=Ll,nn=l(),Is=new m(!1),Ss=l(),He=o("p"),He.textContent=Hl,ln=l(),un(Me.$$.fragment),an=l(),Pe=o("p"),Pe.innerHTML=Ml,on=l(),Ns=new m(!1),Os=l(),De=o("p"),De.innerHTML=Pl,pn=l(),Ws=new m(!1),Rs=l(),qe=o("p"),qe.innerHTML=Dl,cn=l(),Ks=new m(!1),Vs=l(),$e=o("h2"),$e.innerHTML=ql,rn=l(),je=o("h2"),je.innerHTML=$l,dn=l(),ze=o("h2"),ze.innerHTML=jl,yn=l(),Ue=o("h2"),Ue.innerHTML=zl,mn=l(),Ie=o("h2"),Ie.innerHTML=Ul,this.h()},l(e){d=i(e,"P",{"data-svelte-h":!0}),p(d)!=="svelte-129tavb"&&(d.innerHTML=u),c=a(e),r=i(e,"H2",{"data-svelte-h":!0}),p(r)!=="svelte-jpxk5s"&&(r.textContent=B),y=a(e),F=i(e,"UL",{"data-svelte-h":!0}),p(F)!=="svelte-hst2wq"&&(F.innerHTML=v),w=a(e),A=i(e,"H2",{"data-svelte-h":!0}),p(A)!=="svelte-117zo8l"&&(A.innerHTML=Se),Gs=a(e),b=i(e,"P",{"data-svelte-h":!0}),p(b)!=="svelte-2fdbkg"&&(b.textContent=_n),Js=a(e),C=i(e,"H2",{"data-svelte-h":!0}),p(C)!=="svelte-tidut0"&&(C.innerHTML=gn),Zs=a(e),x=i(e,"P",{"data-svelte-h":!0}),p(x)!=="svelte-uwohuf"&&(x.textContent=kn),Qs=a(e),hn(_.$$.fragment,e),Xs=a(e),g=i(e,"P",{"data-svelte-h":!0}),p(g)!=="svelte-rupfdc"&&(g.innerHTML=Tn),Ys=a(e),k=i(e,"P",{"data-svelte-h":!0}),p(k)!=="svelte-1yhcm7v"&&(k.textContent=En),et=a(e),Ne=f(e,!1),Oe=a(e),T=i(e,"H2",{"data-svelte-h":!0}),p(T)!=="svelte-66d0ck"&&(T.innerHTML=Ln),st=a(e),E=i(e,"P",{"data-svelte-h":!0}),p(E)!=="svelte-1wqdc8y"&&(E.textContent=Hn),tt=a(e),We=f(e,!1),Re=a(e),L=i(e,"P",{"data-svelte-h":!0}),p(L)!=="svelte-1jtl17i"&&(L.textContent=Mn),nt=a(e),H=i(e,"H2",{"data-svelte-h":!0}),p(H)!=="svelte-x8u6xd"&&(H.innerHTML=Pn),lt=a(e),M=i(e,"P",{"data-svelte-h":!0}),p(M)!=="svelte-1pkjszw"&&(M.innerHTML=Dn),at=a(e),Ke=f(e,!1),Ve=a(e),P=i(e,"P",{"data-svelte-h":!0}),p(P)!=="svelte-177yk2m"&&(P.innerHTML=qn),ot=a(e),Ge=f(e,!1),Je=a(e),D=i(e,"P",{"data-svelte-h":!0}),p(D)!=="svelte-7yn774"&&(D.innerHTML=$n),it=a(e),Ze=f(e,!1),Qe=a(e),q=i(e,"P",{"data-svelte-h":!0}),p(q)!=="svelte-1kdqcl9"&&(q.innerHTML=jn),pt=a(e),Xe=f(e,!1),Ye=a(e),$=i(e,"P",{"data-svelte-h":!0}),p($)!=="svelte-2ni6i0"&&($.innerHTML=zn),ct=a(e),es=f(e,!1),ss=a(e),j=i(e,"P",{"data-svelte-h":!0}),p(j)!=="svelte-19afa1x"&&(j.innerHTML=Un),rt=a(e),ts=f(e,!1),ns=a(e),z=i(e,"P",{"data-svelte-h":!0}),p(z)!=="svelte-1krwygu"&&(z.innerHTML=In),dt=a(e),U=i(e,"H2",{"data-svelte-h":!0}),p(U)!=="svelte-19j7wj3"&&(U.innerHTML=Sn),yt=a(e),I=i(e,"P",{"data-svelte-h":!0}),p(I)!=="svelte-52cnjw"&&(I.textContent=Nn),mt=a(e),ls=f(e,!1),as=a(e),S=i(e,"P",{"data-svelte-h":!0}),p(S)!=="svelte-agm7fn"&&(S.innerHTML=On),ft=a(e),os=f(e,!1),is=a(e),N=i(e,"P",{"data-svelte-h":!0}),p(N)!=="svelte-suiccb"&&(N.innerHTML=Wn),ut=a(e),ps=f(e,!1),cs=a(e),O=i(e,"P",{"data-svelte-h":!0}),p(O)!=="svelte-15lnuhe"&&(O.innerHTML=Rn),ht=a(e),rs=f(e,!1),ds=a(e),W=i(e,"P",{"data-svelte-h":!0}),p(W)!=="svelte-12fj6mw"&&(W.innerHTML=Kn),Bt=a(e),ys=f(e,!1),ms=a(e),R=i(e,"P",{"data-svelte-h":!0}),p(R)!=="svelte-1m1v0kh"&&(R.innerHTML=Vn),Ft=a(e),fs=f(e,!1),us=a(e),K=i(e,"H2",{"data-svelte-h":!0}),p(K)!=="svelte-16y6ypx"&&(K.innerHTML=Gn),vt=a(e),V=i(e,"P",{"data-svelte-h":!0}),p(V)!=="svelte-cqhpv7"&&(V.innerHTML=Jn),wt=a(e),G=i(e,"P",{"data-svelte-h":!0}),p(G)!=="svelte-h7a9jo"&&(G.innerHTML=Zn),At=a(e),hs=f(e,!1),Bs=a(e),J=i(e,"P",{"data-svelte-h":!0}),p(J)!=="svelte-33253d"&&(J.innerHTML=Qn),bt=a(e),Fs=f(e,!1),vs=a(e),Z=i(e,"P",{"data-svelte-h":!0}),p(Z)!=="svelte-ssqho0"&&(Z.textContent=Xn),Ct=a(e),hn(Q.$$.fragment,e),xt=a(e),X=i(e,"P",{"data-svelte-h":!0}),p(X)!=="svelte-nmq94r"&&(X.innerHTML=Yn),_t=a(e),Y=i(e,"P",{"data-svelte-h":!0}),p(Y)!=="svelte-kimv1k"&&(Y.innerHTML=el),gt=a(e),ws=f(e,!1),As=a(e),ee=i(e,"H2",{"data-svelte-h":!0}),p(ee)!=="svelte-5hc67k"&&(ee.innerHTML=sl),kt=a(e),se=i(e,"P",{"data-svelte-h":!0}),p(se)!=="svelte-1g2uunu"&&(se.innerHTML=tl),Tt=a(e),te=i(e,"P",{"data-svelte-h":!0}),p(te)!=="svelte-1m4rdq6"&&(te.textContent=nl),Et=a(e),bs=f(e,!1),Cs=a(e),ne=i(e,"H2",{"data-svelte-h":!0}),p(ne)!=="svelte-1pt1k5c"&&(ne.innerHTML=ll),Lt=a(e),le=i(e,"P",{"data-svelte-h":!0}),p(le)!=="svelte-6yy2q"&&(le.innerHTML=al),Ht=a(e),xs=f(e,!1),_s=a(e),ae=i(e,"P",{"data-svelte-h":!0}),p(ae)!=="svelte-18tp3od"&&(ae.innerHTML=ol),Mt=a(e),gs=f(e,!1),ks=a(e),oe=i(e,"P",{"data-svelte-h":!0}),p(oe)!=="svelte-oz6v8f"&&(oe.innerHTML=il),Pt=a(e),ie=i(e,"H2",{"data-svelte-h":!0}),p(ie)!=="svelte-10sk5d3"&&(ie.innerHTML=pl),Dt=a(e),pe=i(e,"P",{"data-svelte-h":!0}),p(pe)!=="svelte-aorqqd"&&(pe.textContent=cl),qt=a(e),ce=i(e,"UL",{"data-svelte-h":!0}),p(ce)!=="svelte-1omr5qf"&&(ce.innerHTML=rl),$t=a(e),re=i(e,"P",{"data-svelte-h":!0}),p(re)!=="svelte-gdw60y"&&(re.innerHTML=dl),jt=a(e),de=i(e,"P",{"data-svelte-h":!0}),p(de)!=="svelte-c8gv1o"&&(de.textContent=yl),zt=a(e),Ts=f(e,!1),Es=a(e),ye=i(e,"P",{"data-svelte-h":!0}),p(ye)!=="svelte-15kujve"&&(ye.innerHTML=ml),Ut=a(e),Ls=f(e,!1),Hs=a(e),me=i(e,"P",{"data-svelte-h":!0}),p(me)!=="svelte-sza2vm"&&(me.innerHTML=fl),It=a(e),fe=i(e,"P",{"data-svelte-h":!0}),p(fe)!=="svelte-17p764k"&&(fe.innerHTML=ul),St=a(e),ue=i(e,"P",{"data-svelte-h":!0}),p(ue)!=="svelte-1uo2jle"&&(ue.innerHTML=hl),Nt=a(e),Ms=f(e,!1),Ps=a(e),he=i(e,"P",{"data-svelte-h":!0}),p(he)!=="svelte-57lox6"&&(he.innerHTML=Bl),Ot=a(e),Ds=f(e,!1),qs=a(e),Be=i(e,"P",{"data-svelte-h":!0}),p(Be)!=="svelte-3nbhf6"&&(Be.innerHTML=Fl),Wt=a(e),hn(Fe.$$.fragment,e),Rt=a(e),ve=i(e,"P",{"data-svelte-h":!0}),p(ve)!=="svelte-j6kwev"&&(ve.textContent=vl),Kt=a(e),$s=f(e,!1),js=a(e),we=i(e,"H2",{"data-svelte-h":!0}),p(we)!=="svelte-1ff2xlu"&&(we.innerHTML=wl),Vt=a(e),Ae=i(e,"P",{"data-svelte-h":!0}),p(Ae)!=="svelte-bct9mx"&&(Ae.innerHTML=Al),Gt=a(e),be=i(e,"P",{"data-svelte-h":!0}),p(be)!=="svelte-4yw8lr"&&(be.innerHTML=bl),Jt=a(e),zs=f(e,!1),Us=a(e),Ce=i(e,"P",{"data-svelte-h":!0}),p(Ce)!=="svelte-1t932qc"&&(Ce.innerHTML=Cl),Zt=a(e),xe=i(e,"P",{"data-svelte-h":!0}),p(xe)!=="svelte-utkckx"&&(xe.innerHTML=xl),Qt=a(e),_e=i(e,"P",{"data-svelte-h":!0}),p(_e)!=="svelte-148jwsv"&&(_e.innerHTML=_l),Xt=a(e),ge=i(e,"P",{"data-svelte-h":!0}),p(ge)!=="svelte-7z0xmm"&&(ge.innerHTML=gl),Yt=a(e),ke=i(e,"P",{"data-svelte-h":!0}),p(ke)!=="svelte-1kwqegq"&&(ke.innerHTML=kl),en=a(e),Te=i(e,"P",{"data-svelte-h":!0}),p(Te)!=="svelte-kzbv3v"&&(Te.innerHTML=Tl),sn=a(e),Ee=i(e,"P",{"data-svelte-h":!0}),p(Ee)!=="svelte-u6xb9s"&&(Ee.innerHTML=El),tn=a(e),Le=i(e,"P",{"data-svelte-h":!0}),p(Le)!=="svelte-7a8ep7"&&(Le.innerHTML=Ll),nn=a(e),Is=f(e,!1),Ss=a(e),He=i(e,"P",{"data-svelte-h":!0}),p(He)!=="svelte-1pu1shu"&&(He.textContent=Hl),ln=a(e),hn(Me.$$.fragment,e),an=a(e),Pe=i(e,"P",{"data-svelte-h":!0}),p(Pe)!=="svelte-18272se"&&(Pe.innerHTML=Ml),on=a(e),Ns=f(e,!1),Os=a(e),De=i(e,"P",{"data-svelte-h":!0}),p(De)!=="svelte-z76wmo"&&(De.innerHTML=Pl),pn=a(e),Ws=f(e,!1),Rs=a(e),qe=i(e,"P",{"data-svelte-h":!0}),p(qe)!=="svelte-2kt2nt"&&(qe.innerHTML=Dl),cn=a(e),Ks=f(e,!1),Vs=a(e),$e=i(e,"H2",{"data-svelte-h":!0}),p($e)!=="svelte-jr3rla"&&($e.innerHTML=ql),rn=a(e),je=i(e,"H2",{"data-svelte-h":!0}),p(je)!=="svelte-4bgj8q"&&(je.innerHTML=$l),dn=a(e),ze=i(e,"H2",{"data-svelte-h":!0}),p(ze)!=="svelte-jzst56"&&(ze.innerHTML=jl),yn=a(e),Ue=i(e,"H2",{"data-svelte-h":!0}),p(Ue)!=="svelte-1e4gwf2"&&(Ue.innerHTML=zl),mn=a(e),Ie=i(e,"H2",{"data-svelte-h":!0}),p(Ie)!=="svelte-tt1uf5"&&(Ie.innerHTML=Ul),this.h()},h(){Ne.a=Oe,We.a=Re,Ke.a=Ve,Ge.a=Je,Ze.a=Qe,Xe.a=Ye,es.a=ss,ts.a=ns,ls.a=as,os.a=is,ps.a=cs,rs.a=ds,ys.a=ms,fs.a=us,hs.a=Bs,Fs.a=vs,ws.a=As,bs.a=Cs,xs.a=_s,gs.a=ks,Ts.a=Es,Ls.a=Hs,Ms.a=Ps,Ds.a=qs,$s.a=js,zs.a=Us,Is.a=Ss,Ns.a=Os,Ws.a=Rs,Ks.a=Vs},m(e,s){n(e,d,s),n(e,c,s),n(e,r,s),n(e,y,s),n(e,F,s),n(e,w,s),n(e,A,s),n(e,Gs,s),n(e,b,s),n(e,Js,s),n(e,C,s),n(e,Zs,s),n(e,x,s),n(e,Qs,s),Bn(_,e,s),n(e,Xs,s),n(e,g,s),n(e,Ys,s),n(e,k,s),n(e,et,s),Ne.m(Zl,e,s),n(e,Oe,s),n(e,T,s),n(e,st,s),n(e,E,s),n(e,tt,s),We.m(Ql,e,s),n(e,Re,s),n(e,L,s),n(e,nt,s),n(e,H,s),n(e,lt,s),n(e,M,s),n(e,at,s),Ke.m(Xl,e,s),n(e,Ve,s),n(e,P,s),n(e,ot,s),Ge.m(Yl,e,s),n(e,Je,s),n(e,D,s),n(e,it,s),Ze.m(ea,e,s),n(e,Qe,s),n(e,q,s),n(e,pt,s),Xe.m(sa,e,s),n(e,Ye,s),n(e,$,s),n(e,ct,s),es.m(ta,e,s),n(e,ss,s),n(e,j,s),n(e,rt,s),ts.m(na,e,s),n(e,ns,s),n(e,z,s),n(e,dt,s),n(e,U,s),n(e,yt,s),n(e,I,s),n(e,mt,s),ls.m(la,e,s),n(e,as,s),n(e,S,s),n(e,ft,s),os.m(aa,e,s),n(e,is,s),n(e,N,s),n(e,ut,s),ps.m(oa,e,s),n(e,cs,s),n(e,O,s),n(e,ht,s),rs.m(ia,e,s),n(e,ds,s),n(e,W,s),n(e,Bt,s),ys.m(pa,e,s),n(e,ms,s),n(e,R,s),n(e,Ft,s),fs.m(ca,e,s),n(e,us,s),n(e,K,s),n(e,vt,s),n(e,V,s),n(e,wt,s),n(e,G,s),n(e,At,s),hs.m(ra,e,s),n(e,Bs,s),n(e,J,s),n(e,bt,s),Fs.m(da,e,s),n(e,vs,s),n(e,Z,s),n(e,Ct,s),Bn(Q,e,s),n(e,xt,s),n(e,X,s),n(e,_t,s),n(e,Y,s),n(e,gt,s),ws.m(ya,e,s),n(e,As,s),n(e,ee,s),n(e,kt,s),n(e,se,s),n(e,Tt,s),n(e,te,s),n(e,Et,s),bs.m(ma,e,s),n(e,Cs,s),n(e,ne,s),n(e,Lt,s),n(e,le,s),n(e,Ht,s),xs.m(fa,e,s),n(e,_s,s),n(e,ae,s),n(e,Mt,s),gs.m(ua,e,s),n(e,ks,s),n(e,oe,s),n(e,Pt,s),n(e,ie,s),n(e,Dt,s),n(e,pe,s),n(e,qt,s),n(e,ce,s),n(e,$t,s),n(e,re,s),n(e,jt,s),n(e,de,s),n(e,zt,s),Ts.m(ha,e,s),n(e,Es,s),n(e,ye,s),n(e,Ut,s),Ls.m(Ba,e,s),n(e,Hs,s),n(e,me,s),n(e,It,s),n(e,fe,s),n(e,St,s),n(e,ue,s),n(e,Nt,s),Ms.m(Fa,e,s),n(e,Ps,s),n(e,he,s),n(e,Ot,s),Ds.m(va,e,s),n(e,qs,s),n(e,Be,s),n(e,Wt,s),Bn(Fe,e,s),n(e,Rt,s),n(e,ve,s),n(e,Kt,s),$s.m(wa,e,s),n(e,js,s),n(e,we,s),n(e,Vt,s),n(e,Ae,s),n(e,Gt,s),n(e,be,s),n(e,Jt,s),zs.m(Aa,e,s),n(e,Us,s),n(e,Ce,s),n(e,Zt,s),n(e,xe,s),n(e,Qt,s),n(e,_e,s),n(e,Xt,s),n(e,ge,s),n(e,Yt,s),n(e,ke,s),n(e,en,s),n(e,Te,s),n(e,sn,s),n(e,Ee,s),n(e,tn,s),n(e,Le,s),n(e,nn,s),Is.m(ba,e,s),n(e,Ss,s),n(e,He,s),n(e,ln,s),Bn(Me,e,s),n(e,an,s),n(e,Pe,s),n(e,on,s),Ns.m(Ca,e,s),n(e,Os,s),n(e,De,s),n(e,pn,s),Ws.m(xa,e,s),n(e,Rs,s),n(e,qe,s),n(e,cn,s),Ks.m(_a,e,s),n(e,Vs,s),n(e,$e,s),n(e,rn,s),n(e,je,s),n(e,dn,s),n(e,ze,s),n(e,yn,s),n(e,Ue,s),n(e,mn,s),n(e,Ie,s),fn=!0},p:xn,i(e){fn||(Fn(_.$$.fragment,e),Fn(Q.$$.fragment,e),Fn(Fe.$$.fragment,e),Fn(Me.$$.fragment,e),fn=!0)},o(e){vn(_.$$.fragment,e),vn(Q.$$.fragment,e),vn(Fe.$$.fragment,e),vn(Me.$$.fragment,e),fn=!1},d(e){e&&(t(d),t(c),t(r),t(y),t(F),t(w),t(A),t(Gs),t(b),t(Js),t(C),t(Zs),t(x),t(Qs),t(Xs),t(g),t(Ys),t(k),t(et),Ne.d(),t(Oe),t(T),t(st),t(E),t(tt),We.d(),t(Re),t(L),t(nt),t(H),t(lt),t(M),t(at),Ke.d(),t(Ve),t(P),t(ot),Ge.d(),t(Je),t(D),t(it),Ze.d(),t(Qe),t(q),t(pt),Xe.d(),t(Ye),t($),t(ct),es.d(),t(ss),t(j),t(rt),ts.d(),t(ns),t(z),t(dt),t(U),t(yt),t(I),t(mt),ls.d(),t(as),t(S),t(ft),os.d(),t(is),t(N),t(ut),ps.d(),t(cs),t(O),t(ht),rs.d(),t(ds),t(W),t(Bt),ys.d(),t(ms),t(R),t(Ft),fs.d(),t(us),t(K),t(vt),t(V),t(wt),t(G),t(At),hs.d(),t(Bs),t(J),t(bt),Fs.d(),t(vs),t(Z),t(Ct),t(xt),t(X),t(_t),t(Y),t(gt),ws.d(),t(As),t(ee),t(kt),t(se),t(Tt),t(te),t(Et),bs.d(),t(Cs),t(ne),t(Lt),t(le),t(Ht),xs.d(),t(_s),t(ae),t(Mt),gs.d(),t(ks),t(oe),t(Pt),t(ie),t(Dt),t(pe),t(qt),t(ce),t($t),t(re),t(jt),t(de),t(zt),Ts.d(),t(Es),t(ye),t(Ut),Ls.d(),t(Hs),t(me),t(It),t(fe),t(St),t(ue),t(Nt),Ms.d(),t(Ps),t(he),t(Ot),Ds.d(),t(qs),t(Be),t(Wt),t(Rt),t(ve),t(Kt),$s.d(),t(js),t(we),t(Vt),t(Ae),t(Gt),t(be),t(Jt),zs.d(),t(Us),t(Ce),t(Zt),t(xe),t(Qt),t(_e),t(Xt),t(ge),t(Yt),t(ke),t(en),t(Te),t(sn),t(Ee),t(tn),t(Le),t(nn),Is.d(),t(Ss),t(He),t(ln),t(an),t(Pe),t(on),Ns.d(),t(Os),t(De),t(pn),Ws.d(),t(Rs),t(qe),t(cn),Ks.d(),t(Vs),t($e),t(rn),t(je),t(dn),t(ze),t(yn),t(Ue),t(mn),t(Ie)),wn(_,e),wn(Q,e),wn(Fe,e),wn(Me,e)}}}const Da={title:"Mastering the command line",description:"Become a Linux superuser",date:"2021-10-20",image:"/images/macbook-code.jpg",categories:["Linux"],published:!1};function La(h){return[[{command:"cat",description:"Type out a file (or combine files)"},{command:"head",description:"Show first few lines of file"},{command:"tail",description:"show last few lines of file"},{command:"less",description:"View contents of larger files with scroll-back"},{command:"man",description:"View documentation"},{command:"sudo",description:"Grant admin privileges"},{command:"|",description:"Pipe data between programs"},{command:"ssh",description:"Secure shell remote machine"},{command:"pwd",description:"Print working directory"},{command:"cd",description:"Change directory"}],[{cmd:"?",desc:"Match any single character"},{cmd:"*",desc:"Match any string of characters"},{cmd:"[set]",desc:"Match any character in set, e.g., [adf]"},{cmd:"[!set]",desc:"Match any character not in set"}],[{cmd:"t",desc:"Show or hide summary"},{cmd:"m",desc:"Show or hide memory"},{cmd:"A",desc:"Sort list by highest resource consumers"},{cmd:"r",desc:"Renice specific process"},{cmd:"k",desc:"Kill specific process"},{cmd:"f",desc:"Enter configuration utility"}],[{cmd:"c",desc:"Provide listing of differences"},{cmd:"r",desc:"Recursively compare subdirectories"},{cmd:"i",desc:"Ignore capitalization"},{cmd:"w",desc:"Ignore whitespace"},{cmd:"q",desc:"State whether files are different without providing context"}]]}class qa extends Vl{constructor(d){super(),Gl(this,d,La,Ea,Kl,{})}}export{qa as default,Da as metadata};
