import{s as ys,n as Q}from"./scheduler.ae1baad1.js";import{S as Bs,i as ms,g as B,m as As,h as m,j as ls,n as hs,f as e,k as es,a,x as as,o as ws,s as n,r as ts,H as f,e as ns,z as h,c as o,u as os,D as C,v as ps,d as is,t as rs,w as cs}from"./index.0e1198e2.js";function bs(d){let t,i,r,p;return{c(){t=B("h2"),i=B("a"),r=As(d[0]),this.h()},l(u){t=m(u,"H2",{});var c=ls(t);i=m(c,"A",{id:!0});var y=ls(i);r=hs(y,d[0]),y.forEach(e),c.forEach(e),this.h()},h(){es(i,"id",p=d[0].replace(/\s+/g,"-").toLowerCase())},m(u,c){a(u,t,c),as(t,i),as(i,r)},p(u,[c]){c&1&&ws(r,u[0]),c&1&&p!==(p=u[0].replace(/\s+/g,"-").toLowerCase())&&es(i,"id",p)},i:Q,o:Q,d(u){u&&e(t)}}}function $s(d,t,i){let{str:r=""}=t;return d.$$set=p=>{"str"in p&&i(0,r=p.str)},[r]}class us extends Bs{constructor(t){super(),ms(this,t,$s,bs,ys,{str:0})}}function gs(d){let t,i='<img src="https://upload.wikimedia.org/wikipedia/commons/d/db/Julia1.1.1.jpg" alt="Julia REPL"/>',r,p,u="Contents",c,y,V='<li><a href="#introduction">Introduction</a></li>',z,_,U,x,X="Julia is a modern programming language released in 2011.",W,v,R,w,ds='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">?println</span></span></code></pre>',b,$,fs=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #7F848E; font-style: italic"># Single line comment</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">#=</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">    Multi-line</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">    comment!</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">=#</span></span></code></pre>`,g,E,Cs='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">∇ = </span><span style="color: #98C379">&quot;Unicode variables!&quot;</span></span></code></pre>',q,H,_s=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #56B6C2">println</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Hello!&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #56B6C2">typeof</span><span style="color: #ABB2BF">(Int64)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #7F848E; font-style: italic"># string interpolation</span></span>
<span class="line"><span style="color: #ABB2BF">name = </span><span style="color: #98C379">&quot;Julia&quot;</span></span>
<span class="line"><span style="color: #56B6C2">println</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Hello, </span><span style="color: #E06C75">$name</span><span style="color: #98C379">&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">x = </span><span style="color: #D19A66">3</span></span>
<span class="line"><span style="color: #56B6C2">println</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;x + 1 = </span><span style="color: #E06C75">$(x </span><span style="color: #56B6C2">+</span><span style="color: #E06C75"> </span><span style="color: #D19A66">1</span><span style="color: #E06C75">)</span><span style="color: #98C379">&quot;</span><span style="color: #ABB2BF">)</span></span></code></pre>`,J,F,Y="By default, Julia functions return the value produced on the last line of the function definition.",G,D,xs=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #C678DD">function</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">f</span><span style="color: #ABB2BF">(x)</span></span>
<span class="line"><span style="color: #ABB2BF">    x</span><span style="color: #56B6C2">^</span><span style="color: #D19A66">2</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># return x^2 is also valid declarative syntax</span></span>
<span class="line"><span style="color: #C678DD">end</span></span></code></pre>`,L,P,vs='<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #61AFEF">f</span><span style="color: #ABB2BF">(x) = x</span><span style="color: #56B6C2">^</span><span style="color: #D19A66">2</span></span></code></pre>',M,k,Z="Similar to Python and JavaScript, Julia supports “anonymous” (lambda) functions.",K,S,Fs=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">(first, last) -&gt; </span><span style="color: #56B6C2">println</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Welcome, </span><span style="color: #E06C75">$first</span><span style="color: #98C379"> </span><span style="color: #E06C75">$last</span><span style="color: #98C379">&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">x -&gt; x</span><span style="color: #56B6C2">^</span><span style="color: #D19A66">2</span></span></code></pre>`,T,A,ss="However, unlike those other languages, Julia allows developers to bind a name to anonumous functions, so that it can be referenced later:",N,j,ks=`<pre class="shiki one-dark-pro" style="background-color: #282c34" tabindex="0"><code><span class="line"><span style="color: #ABB2BF">welcome = (first, last) -&gt; </span><span style="color: #56B6C2">println</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Welcome, </span><span style="color: #E06C75">$first</span><span style="color: #98C379"> </span><span style="color: #E06C75">$last</span><span style="color: #98C379">&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">f = x -&gt; x</span><span style="color: #56B6C2">^</span><span style="color: #D19A66">2</span></span></code></pre>`,I,O;return _=new us({props:{str:"Introduction"}}),v=new us({props:{str:"Basic commands and syntax"}}),{c(){t=B("p"),t.innerHTML=i,r=n(),p=B("h2"),p.textContent=u,c=n(),y=B("ul"),y.innerHTML=V,z=n(),ts(_.$$.fragment),U=n(),x=B("p"),x.textContent=X,W=n(),ts(v.$$.fragment),R=n(),w=new f(!1),b=n(),$=new f(!1),g=n(),E=new f(!1),q=n(),H=new f(!1),J=n(),F=B("p"),F.textContent=Y,G=n(),D=new f(!1),L=n(),P=new f(!1),M=n(),k=B("p"),k.textContent=Z,K=n(),S=new f(!1),T=n(),A=B("p"),A.textContent=ss,N=n(),j=new f(!1),I=ns(),this.h()},l(s){t=m(s,"P",{"data-svelte-h":!0}),h(t)!=="svelte-14qmd3h"&&(t.innerHTML=i),r=o(s),p=m(s,"H2",{"data-svelte-h":!0}),h(p)!=="svelte-jpxk5s"&&(p.textContent=u),c=o(s),y=m(s,"UL",{"data-svelte-h":!0}),h(y)!=="svelte-anegq1"&&(y.innerHTML=V),z=o(s),os(_.$$.fragment,s),U=o(s),x=m(s,"P",{"data-svelte-h":!0}),h(x)!=="svelte-x33bok"&&(x.textContent=X),W=o(s),os(v.$$.fragment,s),R=o(s),w=C(s,!1),b=o(s),$=C(s,!1),g=o(s),E=C(s,!1),q=o(s),H=C(s,!1),J=o(s),F=m(s,"P",{"data-svelte-h":!0}),h(F)!=="svelte-ii93tl"&&(F.textContent=Y),G=o(s),D=C(s,!1),L=o(s),P=C(s,!1),M=o(s),k=m(s,"P",{"data-svelte-h":!0}),h(k)!=="svelte-ztt9bk"&&(k.textContent=Z),K=o(s),S=C(s,!1),T=o(s),A=m(s,"P",{"data-svelte-h":!0}),h(A)!=="svelte-17kf201"&&(A.textContent=ss),N=o(s),j=C(s,!1),I=ns(),this.h()},h(){w.a=b,$.a=g,E.a=q,H.a=J,D.a=L,P.a=M,S.a=T,j.a=I},m(s,l){a(s,t,l),a(s,r,l),a(s,p,l),a(s,c,l),a(s,y,l),a(s,z,l),ps(_,s,l),a(s,U,l),a(s,x,l),a(s,W,l),ps(v,s,l),a(s,R,l),w.m(ds,s,l),a(s,b,l),$.m(fs,s,l),a(s,g,l),E.m(Cs,s,l),a(s,q,l),H.m(_s,s,l),a(s,J,l),a(s,F,l),a(s,G,l),D.m(xs,s,l),a(s,L,l),P.m(vs,s,l),a(s,M,l),a(s,k,l),a(s,K,l),S.m(Fs,s,l),a(s,T,l),a(s,A,l),a(s,N,l),j.m(ks,s,l),a(s,I,l),O=!0},p:Q,i(s){O||(is(_.$$.fragment,s),is(v.$$.fragment,s),O=!0)},o(s){rs(_.$$.fragment,s),rs(v.$$.fragment,s),O=!1},d(s){s&&(e(t),e(r),e(p),e(c),e(y),e(z),e(U),e(x),e(W),e(R),w.d(),e(b),$.d(),e(g),E.d(),e(q),H.d(),e(J),e(F),e(G),D.d(),e(L),P.d(),e(M),e(k),e(K),S.d(),e(T),e(A),e(N),e(I),j.d()),cs(_,s),cs(v,s)}}}const Hs={title:"Computing data science with Julia",description:"Become a Linux superuser",date:"2023-10-10",image:"https://upload.wikimedia.org/wikipedia/commons/d/db/Julia1.1.1.jpg",categories:["JuliaLang"],published:!1};class Js extends Bs{constructor(t){super(),ms(this,t,null,gs,ys,{})}}export{Js as default,Hs as metadata};
