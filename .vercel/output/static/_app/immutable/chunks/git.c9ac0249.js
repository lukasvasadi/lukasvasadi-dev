import{s as An,n as yl}from"./scheduler.be0e0057.js";import{S as mn,i as un,g as o,s as a,H as c,e as wa,h as p,D as i,c as n,G as r,a as s,f as l}from"./index.c7c9b348.js";function hn(ga){let y,Dl="Contents",Xt,D,Cl='<li><a href="#introduction">Introduction</a></li> <li><a href="#authentication">Authentication</a></li> <li><a href="#repositories">Repositories</a></li> <li><a href="#commits">Commits</a></li> <li><a href="#branches">Branches</a></li>',Zt,C,dl='<a id="introduction">Introduction</a>',es,d,Al="This guide assumes that git has been installed on the local machine. For simplicity, it is also assumed that the user has Git Bash—especially for Windows—or a standard bash/zsh console with access to the git command line tools, along with a GitHub account.",ts,A,ml='<a id="authentication">Authentication</a>',ss,m,ul='GitHub, the repository cloud storage owned by Microsoft, now requires developers to authenticate their machines with SSH keys for added security. The official <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" rel="nofollow">online tutorial</a> covers all steps to generate an SSH key and add it to a GitHub account. These steps have been consolidated below for convenience.',ls,u,hl="Generating an SSH key",as,h,fl="<p><strong><em>NOTE:</em></strong> For Windows users, the following commands require a bash-like shell program, such as Git Bash, which is a separate terminal program installed alongside the Git toolchain. You can find this program in the search menu.</p>",ns,f,bl="First, create an SSH key with the email address tied to the GitHub account:",os,_e,ka=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># replace email address</span></span>
<span class="line"><span style="color: #91B4D5">ssh-keygen</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-t</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">ed25519</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-C</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">account@example.com</span><span style="color: #A6ACCD">&quot;</span></span></code></pre>`,we,b,Fl="When prompted for a filename, press enter to accept the default. Choose a security passphrase at the next prompt or, alternatively, press enter to proceed without a passphrase.",ps,F,vl="<p><strong><em>NOTE:</em></strong> If you choose a security passphrase, it will be required for every future commit.</p>",is,v,xl="Start the background SSH agent:",cs,ge,Ba='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">eval</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;$(</span><span style="color: #91B4D5">ssh-agent</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">-s</span><span style="color: #A6ACCD">)&quot;</span></span></code></pre>',ke,x,_l="Add the SSH private key to the agent:",rs,Be,Ta='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">ssh-add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">~/.ssh/id_ed25519</span></span></code></pre>',Te,_,wl="Copy the SSH public key to the clipboard:",ys,He,Ha='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">clip</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">&lt;</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">~/.ssh/id_ed25519.pub</span></span></code></pre>',Pe,w,gl="If you are not using Git Bash, and the <code>clip</code> utility is not installed in your toolchain, then you will probably receive the error <code>command not found: clip</code>. In this case, you may simply print the contents of <code>~/.ssh/id_ed25519.pub</code> to the console and copy the text key manually:",Ds,Le,Pa='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">cat</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">~/.ssh/id_ed25519.pub</span></span></code></pre>',Me,g,kl='This key must be added to the authorized SSH key list in the GitHub account settings. More detailed instructions for listing authorized keys can be found at the <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" rel="nofollow">online tutorial</a>.',Cs,k,Bl='<a id="repositories">Repositories</a>',ds,B,Tl="Often, the first step to managing a project is to create or clone a git repository. GitHub is the most common remote repository web application, allowing developers to store large code bases, track changes, and collaborate. Before creating a new repository, you may wish to change the initial branch default name to “main”. This setting only needs to be changed once and, though not strictly necessary, may help to avoid extra steps when initializing future repositories. To update the default branch name:",As,qe,La=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># only needs to be executed once</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">init.defaultBranch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">main</span></span></code></pre>`,je,T,Hl="To create a git repository from a local project directory:",ms,Se,Ma=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># navigate to project directory</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">init</span></span></code></pre>`,Ge,H,Pl="In most cases, the first step may be to identify specific files or directories to ignore from tracking. The relative path names of these files and directories can be added to a special gitignore file, which is located in the project root:",us,ze,qa=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># many developers choose to ignore directories that host virtual environments</span></span>
<span class="line"><span style="color: #91B4D5">echo</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">venv</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">&gt;&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">.gitignore</span></span></code></pre>`,Ie,P,Ll="At this point, the repository is ready to be committed:",hs,Oe,ja=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-A</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">commit</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-m</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">First commit message</span><span style="color: #A6ACCD">&quot;</span></span></code></pre>`,Ee,L,Ml="On GitHub, create a new empty repository. Then return to the console and push the code base to the remote server:",fs,Ue,Sa=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">remote</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">git@github.com:username/reponame</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-u</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">main</span></span></code></pre>`,We,M,ql="Likewise, to clone a repository from GitHub:",bs,Ne,Ga='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">clone</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">git@github.com:username/reponame</span></span></code></pre>',Ke,q,jl='<a id="commits">Commits</a>',Fs,j,Sl="In git, a commit deposits new or modified code to the repository, usually with a subject line or description of the changes.",vs,S,Gl="To check the status of current changes:",xs,Qe,za='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">status</span></span></code></pre>',Re,G,zl="To inspect individual files:",_s,Ve,Ia='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">diff</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">filename</span></span></code></pre>',Ye,z,Il="To add changes to a commit:",ws,$e,Oa=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># add all files with changes</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-A</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># add an individual file</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">filename</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># add parts of an individual file (patch level)</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-p</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">filename</span></span></code></pre>`,Je,I,Ol="Using <code>commit</code> with the <code>-p</code> flag will start an interactive prompt that steps through each group of changes—a group being adjacent lines of code—with the option to add that group to the index. In this way, the developer can better associate changes to a commit.",gs,O,El="In general, it is recommended to separate changes into individual commits based on topic. Once changes are staged for a commit:",ks,Xe,Ea=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># commit changes with full description</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">commit</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># alternatively, use a brief inline message</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">commit</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-m</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">Brief description of changes</span><span style="color: #A6ACCD">&quot;</span></span></code></pre>`,Ze,E,Ul="Using <code>commit</code> with no parameters will open a text editor, either a console-based editor like Vim or a standalone application like Notepad, for a description of the changes. The first line is reserved for the <strong>subject</strong>, which briefly summarizes the commit, while all subsequent lines belong to the <strong>body</strong> for more detailed comments. As an example, to add a new Python file that manages a serial connection:",Bs,et,Ua=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #a6accd">Class to manage external devices connected via serial</span></span>
<span class="line"><span style="color: #a6accd"></span></span>
<span class="line"><span style="color: #a6accd">Custom class inherits Serial class from pyserial. It includes a modified read method that strips whitespace, e.g., &#39;/r/n&#39;, from incoming serial data, as well as a modified write method that adds a newline character to any command string passed as an argument.</span></span></code></pre>`,tt,U,Wl="<p><strong><em>NOTE:</em></strong> Git uses Vim as its default text editor. Though powerful, Vim tends to be less popular among younger developers. Fortunately, git provides the ability to change the default editor in the core configuration file.</p>",Ts,W,Nl="To change the default text editor:",Hs,st,Wa=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># change to nano</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">core.editor</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">nano</span><span style="color: #A6ACCD">&quot;</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># change to vs code</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">core.editor</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">code --wait</span><span style="color: #A6ACCD">&quot;</span></span></code></pre>`,lt,N,Kl="To update the default username and email used for commits:",Ps,at,Na=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">user.name</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">username</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">user.email</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">address</span></span></code></pre>`,nt,K,Ql="Alternatively, to specify the username and email for an individual repository:",Ls,ot,Ka=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">user.name</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">username</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">user.email</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">address</span></span></code></pre>`,pt,Q,Rl="Or, to specify the username and email for an individual commit:",Ms,it,Qa='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">commit</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--author=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">username email</span><span style="color: #A6ACCD">&quot;</span></span></code></pre>',ct,R,Vl="To view all global configurations:",qs,rt,Ra='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">config</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--global</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--edit</span></span></code></pre>',yt,V,Yl="If you want to edit the last commit before pushing to remote storage, i.e., GitHub:",js,Dt,Va='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">commit</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--amend</span></span></code></pre>',Ct,Y,$l="Committed changes can now be sent to remote storage:",Ss,dt,Ya='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span></span></code></pre>',At,$,Jl="Lastly, to switch between local branches without committing changes:",Gs,mt,$a='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">stash</span></span></code></pre>',ut,J,Xl='<a id="branches">Branches</a>',zs,X,Zl="Creating branches",Is,Z,ea="The first branch created when initializing a repository is the <code>main</code> branch. This branch serves as the project root and, though not always recommended for collaborative work, may be renamed. Developers create separate daughter branches, where specific features are developed and tested, to prevent breaking changes from entering the project root.",Os,ee,ta="To see a list of local branches on a repository:",Es,ht,Ja='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span></span></code></pre>',ft,te,sa="To see a list of local and remote branches:",Us,bt,Xa=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># use fetch to update the repository based on remote changes</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">fetch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-a</span></span></code></pre>`,Ft,se,la="To create a new branch on an existing project:",Ws,vt,Za='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span></code></pre>',xt,le,aa="To switch between branches:",Ns,_t,en='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">checkout</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span></code></pre>',wt,ae,na="To immediately switch to a new branch:",Ks,gt,tn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">checkout</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-b</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span></code></pre>',kt,ne,oa="To push changes to a new remote branch upstream:",Qs,Bt,sn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--set-upstream</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span></code></pre>',Tt,oe,pa="Deleting branches",Rs,pe,ia="When “trimming” branches, it is often desired to remove both the local and remote instances.",Vs,Ht,ln=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># delete remote branch where remote name is origin</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-d</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># delete local branch instance</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-d</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branchname</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># force local branch deletion</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-D</span></span></code></pre>`,Pt,ie,ca="In the above command set, the first command deletes the remote branch, which shares the same name as the local branch. The <code>-d</code> option is an alias for <code>--delete</code>. Similarly, the <code>-D</code> option is an alias for <code>--delete --force</code>, which will delete the local branch regardless of its merge status—unmerged branches throw an error when the user attempts deletion.",Ys,ce,ra="After trimming branches, the local list of remote branches may need to be updated manually to reflect the changes.",$s,Lt,an=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># update local records</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">remote</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">update</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--prune</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># check that the branch list reflects recent changes</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-a</span></span></code></pre>`,Mt,re,ya="Renaming branches",Js,ye,Da="To rename a branch, first update the name of the local branch, then push the “new” renamed branch and delete the old version.",Xs,qt,nn=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># navigate to branch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">checkout</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">old-branchname</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># rename local branch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">branch</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-m</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">new-branchname</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># push branch to remote origin</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-u</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">new-branchname</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># delete old remote branch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">push</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">origin</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-d</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">old-branchname</span></span></code></pre>`,jt,De,Ca="Merging branches",Zs,Ce,da="Merging is generally reserved for a feature that has matured to the point where it is ready to be added to another branch. As an example, to merge the changes in branch <code>dev</code> to <code>main</code>:",el,St,on=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># switch to main branch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">checkout</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">main</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># merge changes from dev branch</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">merge</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">dev</span></span></code></pre>`,Gt,de,Aa="Sometimes, conflicts arise when merging two branches, i.e., both branches have diverged and contain conflicting code blocks. In this case, one option is to simply undo the merge and reevaluate:",tl,zt,pn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">merge</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--abort</span></span></code></pre>',It,Ae,ma="Otherwise, you will have to manually edit the source code to determine which set of changes should persist. Then, you will have to create a new commit to formally complete the merge process.",sl,me,ua="Submodules",ll,ue,ha="[Submodules](https://www.git-scm.com/book/en/v2/Git-Tools-Submodules) are one way to incorporate code from other projects that exist as git repositories. This is especially useful if the other repository contains library source code used across several projects. To add another repository as a submodule:",al,Ot,cn=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># inside project directory</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">submodule</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">ssh://github.com/account/reponame</span></span></code></pre>`,Et,he,fa="This command will add the submodule repository directory to the current project, as well as some hidden configuration files that help git distinguish the submodule from other subdirectories with source code. When working outside the submodule directory, its contents will not be tracked.",nl,fe,ba="To clone a project with existing submodules:",ol,Ut,rn=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">clone</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">ssh://github.com/account/reponame</span></span>
<span class="line"><span style="color: #91B4D5">cd</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">reponame</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">submodule</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">init</span></span>
<span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">submodule</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">update</span></span></code></pre>`,Wt,be,Fa="As a shorthand to replace the above command set:",pl,Nt,yn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">clone</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--recurse-submodules</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">ssh://github.com/account/reponame</span></span></code></pre>',Kt,Fe,va="If the project was cloned without the <code>--recurse-submodules</code> parameter, the <code>git submodule init</code> and <code>git submodule update</code> steps can be combined as <code>git submodule update --init</code>. Alternatively, to initialize, fetch, and checkout any nested submodules:",il,Qt,Dn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">submodule</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">update</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--init</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--recursive</span></span></code></pre>',Rt,ve,xa="Lastly, to update existing submodules with changes:",cl,Vt,Cn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">git</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">submodule</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">update</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">--remote</span></span></code></pre>',Yt,xe,_a="Occassionally, older repositories may contain git submodules with https authentication. In some cases, it may be necessary to convert existing submodules from https to ssh:",rl,$t,dn='<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">perl</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-i</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-p</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">-e</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">s|https://(.*?)/|git@\\1:|g</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">.gitmodules</span></span></code></pre>',Jt;return{c(){y=o("h2"),y.textContent=Dl,Xt=a(),D=o("ul"),D.innerHTML=Cl,Zt=a(),C=o("h2"),C.innerHTML=dl,es=a(),d=o("p"),d.textContent=Al,ts=a(),A=o("h2"),A.innerHTML=ml,ss=a(),m=o("p"),m.innerHTML=ul,ls=a(),u=o("h3"),u.textContent=hl,as=a(),h=o("blockquote"),h.innerHTML=fl,ns=a(),f=o("p"),f.textContent=bl,os=a(),_e=new c(!1),we=a(),b=o("p"),b.textContent=Fl,ps=a(),F=o("blockquote"),F.innerHTML=vl,is=a(),v=o("p"),v.textContent=xl,cs=a(),ge=new c(!1),ke=a(),x=o("p"),x.textContent=_l,rs=a(),Be=new c(!1),Te=a(),_=o("p"),_.textContent=wl,ys=a(),He=new c(!1),Pe=a(),w=o("p"),w.innerHTML=gl,Ds=a(),Le=new c(!1),Me=a(),g=o("p"),g.innerHTML=kl,Cs=a(),k=o("h2"),k.innerHTML=Bl,ds=a(),B=o("p"),B.textContent=Tl,As=a(),qe=new c(!1),je=a(),T=o("p"),T.textContent=Hl,ms=a(),Se=new c(!1),Ge=a(),H=o("p"),H.textContent=Pl,us=a(),ze=new c(!1),Ie=a(),P=o("p"),P.textContent=Ll,hs=a(),Oe=new c(!1),Ee=a(),L=o("p"),L.textContent=Ml,fs=a(),Ue=new c(!1),We=a(),M=o("p"),M.textContent=ql,bs=a(),Ne=new c(!1),Ke=a(),q=o("h2"),q.innerHTML=jl,Fs=a(),j=o("p"),j.textContent=Sl,vs=a(),S=o("p"),S.textContent=Gl,xs=a(),Qe=new c(!1),Re=a(),G=o("p"),G.textContent=zl,_s=a(),Ve=new c(!1),Ye=a(),z=o("p"),z.textContent=Il,ws=a(),$e=new c(!1),Je=a(),I=o("p"),I.innerHTML=Ol,gs=a(),O=o("p"),O.textContent=El,ks=a(),Xe=new c(!1),Ze=a(),E=o("p"),E.innerHTML=Ul,Bs=a(),et=new c(!1),tt=a(),U=o("blockquote"),U.innerHTML=Wl,Ts=a(),W=o("p"),W.textContent=Nl,Hs=a(),st=new c(!1),lt=a(),N=o("p"),N.textContent=Kl,Ps=a(),at=new c(!1),nt=a(),K=o("p"),K.textContent=Ql,Ls=a(),ot=new c(!1),pt=a(),Q=o("p"),Q.textContent=Rl,Ms=a(),it=new c(!1),ct=a(),R=o("p"),R.textContent=Vl,qs=a(),rt=new c(!1),yt=a(),V=o("p"),V.textContent=Yl,js=a(),Dt=new c(!1),Ct=a(),Y=o("p"),Y.textContent=$l,Ss=a(),dt=new c(!1),At=a(),$=o("p"),$.textContent=Jl,Gs=a(),mt=new c(!1),ut=a(),J=o("h2"),J.innerHTML=Xl,zs=a(),X=o("h3"),X.textContent=Zl,Is=a(),Z=o("p"),Z.innerHTML=ea,Os=a(),ee=o("p"),ee.textContent=ta,Es=a(),ht=new c(!1),ft=a(),te=o("p"),te.textContent=sa,Us=a(),bt=new c(!1),Ft=a(),se=o("p"),se.textContent=la,Ws=a(),vt=new c(!1),xt=a(),le=o("p"),le.textContent=aa,Ns=a(),_t=new c(!1),wt=a(),ae=o("p"),ae.textContent=na,Ks=a(),gt=new c(!1),kt=a(),ne=o("p"),ne.textContent=oa,Qs=a(),Bt=new c(!1),Tt=a(),oe=o("h3"),oe.textContent=pa,Rs=a(),pe=o("p"),pe.textContent=ia,Vs=a(),Ht=new c(!1),Pt=a(),ie=o("p"),ie.innerHTML=ca,Ys=a(),ce=o("p"),ce.textContent=ra,$s=a(),Lt=new c(!1),Mt=a(),re=o("h3"),re.textContent=ya,Js=a(),ye=o("p"),ye.textContent=Da,Xs=a(),qt=new c(!1),jt=a(),De=o("h3"),De.textContent=Ca,Zs=a(),Ce=o("p"),Ce.innerHTML=da,el=a(),St=new c(!1),Gt=a(),de=o("p"),de.textContent=Aa,tl=a(),zt=new c(!1),It=a(),Ae=o("p"),Ae.textContent=ma,sl=a(),me=o("h2"),me.textContent=ua,ll=a(),ue=o("p"),ue.textContent=ha,al=a(),Ot=new c(!1),Et=a(),he=o("p"),he.textContent=fa,nl=a(),fe=o("p"),fe.textContent=ba,ol=a(),Ut=new c(!1),Wt=a(),be=o("p"),be.textContent=Fa,pl=a(),Nt=new c(!1),Kt=a(),Fe=o("p"),Fe.innerHTML=va,il=a(),Qt=new c(!1),Rt=a(),ve=o("p"),ve.textContent=xa,cl=a(),Vt=new c(!1),Yt=a(),xe=o("p"),xe.textContent=_a,rl=a(),$t=new c(!1),Jt=wa(),this.h()},l(e){y=p(e,"H2",{"data-svelte-h":!0}),i(y)!=="svelte-jpxk5s"&&(y.textContent=Dl),Xt=n(e),D=p(e,"UL",{"data-svelte-h":!0}),i(D)!=="svelte-dbjmhp"&&(D.innerHTML=Cl),Zt=n(e),C=p(e,"H2",{"data-svelte-h":!0}),i(C)!=="svelte-117zo8l"&&(C.innerHTML=dl),es=n(e),d=p(e,"P",{"data-svelte-h":!0}),i(d)!=="svelte-1hk4zoe"&&(d.textContent=Al),ts=n(e),A=p(e,"H2",{"data-svelte-h":!0}),i(A)!=="svelte-3c6bxx"&&(A.innerHTML=ml),ss=n(e),m=p(e,"P",{"data-svelte-h":!0}),i(m)!=="svelte-dawof5"&&(m.innerHTML=ul),ls=n(e),u=p(e,"H3",{"data-svelte-h":!0}),i(u)!=="svelte-1u0j2ok"&&(u.textContent=hl),as=n(e),h=p(e,"BLOCKQUOTE",{"data-svelte-h":!0}),i(h)!=="svelte-12p4uq"&&(h.innerHTML=fl),ns=n(e),f=p(e,"P",{"data-svelte-h":!0}),i(f)!=="svelte-1qiv9zh"&&(f.textContent=bl),os=n(e),_e=r(e,!1),we=n(e),b=p(e,"P",{"data-svelte-h":!0}),i(b)!=="svelte-1cvz4qx"&&(b.textContent=Fl),ps=n(e),F=p(e,"BLOCKQUOTE",{"data-svelte-h":!0}),i(F)!=="svelte-5hs05a"&&(F.innerHTML=vl),is=n(e),v=p(e,"P",{"data-svelte-h":!0}),i(v)!=="svelte-1trgzjo"&&(v.textContent=xl),cs=n(e),ge=r(e,!1),ke=n(e),x=p(e,"P",{"data-svelte-h":!0}),i(x)!=="svelte-9wxc0t"&&(x.textContent=_l),rs=n(e),Be=r(e,!1),Te=n(e),_=p(e,"P",{"data-svelte-h":!0}),i(_)!=="svelte-1or1kxk"&&(_.textContent=wl),ys=n(e),He=r(e,!1),Pe=n(e),w=p(e,"P",{"data-svelte-h":!0}),i(w)!=="svelte-wqzvas"&&(w.innerHTML=gl),Ds=n(e),Le=r(e,!1),Me=n(e),g=p(e,"P",{"data-svelte-h":!0}),i(g)!=="svelte-1lq509n"&&(g.innerHTML=kl),Cs=n(e),k=p(e,"H2",{"data-svelte-h":!0}),i(k)!=="svelte-1v2ixzn"&&(k.innerHTML=Bl),ds=n(e),B=p(e,"P",{"data-svelte-h":!0}),i(B)!=="svelte-ecsbea"&&(B.textContent=Tl),As=n(e),qe=r(e,!1),je=n(e),T=p(e,"P",{"data-svelte-h":!0}),i(T)!=="svelte-1d2e0yg"&&(T.textContent=Hl),ms=n(e),Se=r(e,!1),Ge=n(e),H=p(e,"P",{"data-svelte-h":!0}),i(H)!=="svelte-19ejoqt"&&(H.textContent=Pl),us=n(e),ze=r(e,!1),Ie=n(e),P=p(e,"P",{"data-svelte-h":!0}),i(P)!=="svelte-4x47t7"&&(P.textContent=Ll),hs=n(e),Oe=r(e,!1),Ee=n(e),L=p(e,"P",{"data-svelte-h":!0}),i(L)!=="svelte-109amop"&&(L.textContent=Ml),fs=n(e),Ue=r(e,!1),We=n(e),M=p(e,"P",{"data-svelte-h":!0}),i(M)!=="svelte-fxeoi1"&&(M.textContent=ql),bs=n(e),Ne=r(e,!1),Ke=n(e),q=p(e,"H2",{"data-svelte-h":!0}),i(q)!=="svelte-ym3wev"&&(q.innerHTML=jl),Fs=n(e),j=p(e,"P",{"data-svelte-h":!0}),i(j)!=="svelte-1l8u1ij"&&(j.textContent=Sl),vs=n(e),S=p(e,"P",{"data-svelte-h":!0}),i(S)!=="svelte-1gn1ipp"&&(S.textContent=Gl),xs=n(e),Qe=r(e,!1),Re=n(e),G=p(e,"P",{"data-svelte-h":!0}),i(G)!=="svelte-1e5t33l"&&(G.textContent=zl),_s=n(e),Ve=r(e,!1),Ye=n(e),z=p(e,"P",{"data-svelte-h":!0}),i(z)!=="svelte-rle2je"&&(z.textContent=Il),ws=n(e),$e=r(e,!1),Je=n(e),I=p(e,"P",{"data-svelte-h":!0}),i(I)!=="svelte-cpa5ms"&&(I.innerHTML=Ol),gs=n(e),O=p(e,"P",{"data-svelte-h":!0}),i(O)!=="svelte-1dw8gbf"&&(O.textContent=El),ks=n(e),Xe=r(e,!1),Ze=n(e),E=p(e,"P",{"data-svelte-h":!0}),i(E)!=="svelte-wvrapn"&&(E.innerHTML=Ul),Bs=n(e),et=r(e,!1),tt=n(e),U=p(e,"BLOCKQUOTE",{"data-svelte-h":!0}),i(U)!=="svelte-bb9s6k"&&(U.innerHTML=Wl),Ts=n(e),W=p(e,"P",{"data-svelte-h":!0}),i(W)!=="svelte-1f2izlj"&&(W.textContent=Nl),Hs=n(e),st=r(e,!1),lt=n(e),N=p(e,"P",{"data-svelte-h":!0}),i(N)!=="svelte-on7wwx"&&(N.textContent=Kl),Ps=n(e),at=r(e,!1),nt=n(e),K=p(e,"P",{"data-svelte-h":!0}),i(K)!=="svelte-1xwn9sj"&&(K.textContent=Ql),Ls=n(e),ot=r(e,!1),pt=n(e),Q=p(e,"P",{"data-svelte-h":!0}),i(Q)!=="svelte-1v9khxd"&&(Q.textContent=Rl),Ms=n(e),it=r(e,!1),ct=n(e),R=p(e,"P",{"data-svelte-h":!0}),i(R)!=="svelte-18ssv9d"&&(R.textContent=Vl),qs=n(e),rt=r(e,!1),yt=n(e),V=p(e,"P",{"data-svelte-h":!0}),i(V)!=="svelte-1qq0w19"&&(V.textContent=Yl),js=n(e),Dt=r(e,!1),Ct=n(e),Y=p(e,"P",{"data-svelte-h":!0}),i(Y)!=="svelte-s0dii"&&(Y.textContent=$l),Ss=n(e),dt=r(e,!1),At=n(e),$=p(e,"P",{"data-svelte-h":!0}),i($)!=="svelte-7rvjp3"&&($.textContent=Jl),Gs=n(e),mt=r(e,!1),ut=n(e),J=p(e,"H2",{"data-svelte-h":!0}),i(J)!=="svelte-7yy3df"&&(J.innerHTML=Xl),zs=n(e),X=p(e,"H3",{"data-svelte-h":!0}),i(X)!=="svelte-di5x51"&&(X.textContent=Zl),Is=n(e),Z=p(e,"P",{"data-svelte-h":!0}),i(Z)!=="svelte-vnbzez"&&(Z.innerHTML=ea),Os=n(e),ee=p(e,"P",{"data-svelte-h":!0}),i(ee)!=="svelte-1ygqbix"&&(ee.textContent=ta),Es=n(e),ht=r(e,!1),ft=n(e),te=p(e,"P",{"data-svelte-h":!0}),i(te)!=="svelte-15akxku"&&(te.textContent=sa),Us=n(e),bt=r(e,!1),Ft=n(e),se=p(e,"P",{"data-svelte-h":!0}),i(se)!=="svelte-1vq24p8"&&(se.textContent=la),Ws=n(e),vt=r(e,!1),xt=n(e),le=p(e,"P",{"data-svelte-h":!0}),i(le)!=="svelte-1nk4lfd"&&(le.textContent=aa),Ns=n(e),_t=r(e,!1),wt=n(e),ae=p(e,"P",{"data-svelte-h":!0}),i(ae)!=="svelte-15v4lx3"&&(ae.textContent=na),Ks=n(e),gt=r(e,!1),kt=n(e),ne=p(e,"P",{"data-svelte-h":!0}),i(ne)!=="svelte-1a9vr6b"&&(ne.textContent=oa),Qs=n(e),Bt=r(e,!1),Tt=n(e),oe=p(e,"H3",{"data-svelte-h":!0}),i(oe)!=="svelte-1burudm"&&(oe.textContent=pa),Rs=n(e),pe=p(e,"P",{"data-svelte-h":!0}),i(pe)!=="svelte-1cori0g"&&(pe.textContent=ia),Vs=n(e),Ht=r(e,!1),Pt=n(e),ie=p(e,"P",{"data-svelte-h":!0}),i(ie)!=="svelte-18ty9k2"&&(ie.innerHTML=ca),Ys=n(e),ce=p(e,"P",{"data-svelte-h":!0}),i(ce)!=="svelte-117rhfx"&&(ce.textContent=ra),$s=n(e),Lt=r(e,!1),Mt=n(e),re=p(e,"H3",{"data-svelte-h":!0}),i(re)!=="svelte-vr8cuj"&&(re.textContent=ya),Js=n(e),ye=p(e,"P",{"data-svelte-h":!0}),i(ye)!=="svelte-1joyyp1"&&(ye.textContent=Da),Xs=n(e),qt=r(e,!1),jt=n(e),De=p(e,"H3",{"data-svelte-h":!0}),i(De)!=="svelte-qfbqod"&&(De.textContent=Ca),Zs=n(e),Ce=p(e,"P",{"data-svelte-h":!0}),i(Ce)!=="svelte-19x3jxo"&&(Ce.innerHTML=da),el=n(e),St=r(e,!1),Gt=n(e),de=p(e,"P",{"data-svelte-h":!0}),i(de)!=="svelte-7gr392"&&(de.textContent=Aa),tl=n(e),zt=r(e,!1),It=n(e),Ae=p(e,"P",{"data-svelte-h":!0}),i(Ae)!=="svelte-rand1x"&&(Ae.textContent=ma),sl=n(e),me=p(e,"H2",{"data-svelte-h":!0}),i(me)!=="svelte-sgojv9"&&(me.textContent=ua),ll=n(e),ue=p(e,"P",{"data-svelte-h":!0}),i(ue)!=="svelte-1a5depd"&&(ue.textContent=ha),al=n(e),Ot=r(e,!1),Et=n(e),he=p(e,"P",{"data-svelte-h":!0}),i(he)!=="svelte-e0mh0k"&&(he.textContent=fa),nl=n(e),fe=p(e,"P",{"data-svelte-h":!0}),i(fe)!=="svelte-1munt8k"&&(fe.textContent=ba),ol=n(e),Ut=r(e,!1),Wt=n(e),be=p(e,"P",{"data-svelte-h":!0}),i(be)!=="svelte-1xp3ngk"&&(be.textContent=Fa),pl=n(e),Nt=r(e,!1),Kt=n(e),Fe=p(e,"P",{"data-svelte-h":!0}),i(Fe)!=="svelte-epdm2r"&&(Fe.innerHTML=va),il=n(e),Qt=r(e,!1),Rt=n(e),ve=p(e,"P",{"data-svelte-h":!0}),i(ve)!=="svelte-1p4hf56"&&(ve.textContent=xa),cl=n(e),Vt=r(e,!1),Yt=n(e),xe=p(e,"P",{"data-svelte-h":!0}),i(xe)!=="svelte-cymjnz"&&(xe.textContent=_a),rl=n(e),$t=r(e,!1),Jt=wa(),this.h()},h(){_e.a=we,ge.a=ke,Be.a=Te,He.a=Pe,Le.a=Me,qe.a=je,Se.a=Ge,ze.a=Ie,Oe.a=Ee,Ue.a=We,Ne.a=Ke,Qe.a=Re,Ve.a=Ye,$e.a=Je,Xe.a=Ze,et.a=tt,st.a=lt,at.a=nt,ot.a=pt,it.a=ct,rt.a=yt,Dt.a=Ct,dt.a=At,mt.a=ut,ht.a=ft,bt.a=Ft,vt.a=xt,_t.a=wt,gt.a=kt,Bt.a=Tt,Ht.a=Pt,Lt.a=Mt,qt.a=jt,St.a=Gt,zt.a=It,Ot.a=Et,Ut.a=Wt,Nt.a=Kt,Qt.a=Rt,Vt.a=Yt,$t.a=Jt},m(e,t){s(e,y,t),s(e,Xt,t),s(e,D,t),s(e,Zt,t),s(e,C,t),s(e,es,t),s(e,d,t),s(e,ts,t),s(e,A,t),s(e,ss,t),s(e,m,t),s(e,ls,t),s(e,u,t),s(e,as,t),s(e,h,t),s(e,ns,t),s(e,f,t),s(e,os,t),_e.m(ka,e,t),s(e,we,t),s(e,b,t),s(e,ps,t),s(e,F,t),s(e,is,t),s(e,v,t),s(e,cs,t),ge.m(Ba,e,t),s(e,ke,t),s(e,x,t),s(e,rs,t),Be.m(Ta,e,t),s(e,Te,t),s(e,_,t),s(e,ys,t),He.m(Ha,e,t),s(e,Pe,t),s(e,w,t),s(e,Ds,t),Le.m(Pa,e,t),s(e,Me,t),s(e,g,t),s(e,Cs,t),s(e,k,t),s(e,ds,t),s(e,B,t),s(e,As,t),qe.m(La,e,t),s(e,je,t),s(e,T,t),s(e,ms,t),Se.m(Ma,e,t),s(e,Ge,t),s(e,H,t),s(e,us,t),ze.m(qa,e,t),s(e,Ie,t),s(e,P,t),s(e,hs,t),Oe.m(ja,e,t),s(e,Ee,t),s(e,L,t),s(e,fs,t),Ue.m(Sa,e,t),s(e,We,t),s(e,M,t),s(e,bs,t),Ne.m(Ga,e,t),s(e,Ke,t),s(e,q,t),s(e,Fs,t),s(e,j,t),s(e,vs,t),s(e,S,t),s(e,xs,t),Qe.m(za,e,t),s(e,Re,t),s(e,G,t),s(e,_s,t),Ve.m(Ia,e,t),s(e,Ye,t),s(e,z,t),s(e,ws,t),$e.m(Oa,e,t),s(e,Je,t),s(e,I,t),s(e,gs,t),s(e,O,t),s(e,ks,t),Xe.m(Ea,e,t),s(e,Ze,t),s(e,E,t),s(e,Bs,t),et.m(Ua,e,t),s(e,tt,t),s(e,U,t),s(e,Ts,t),s(e,W,t),s(e,Hs,t),st.m(Wa,e,t),s(e,lt,t),s(e,N,t),s(e,Ps,t),at.m(Na,e,t),s(e,nt,t),s(e,K,t),s(e,Ls,t),ot.m(Ka,e,t),s(e,pt,t),s(e,Q,t),s(e,Ms,t),it.m(Qa,e,t),s(e,ct,t),s(e,R,t),s(e,qs,t),rt.m(Ra,e,t),s(e,yt,t),s(e,V,t),s(e,js,t),Dt.m(Va,e,t),s(e,Ct,t),s(e,Y,t),s(e,Ss,t),dt.m(Ya,e,t),s(e,At,t),s(e,$,t),s(e,Gs,t),mt.m($a,e,t),s(e,ut,t),s(e,J,t),s(e,zs,t),s(e,X,t),s(e,Is,t),s(e,Z,t),s(e,Os,t),s(e,ee,t),s(e,Es,t),ht.m(Ja,e,t),s(e,ft,t),s(e,te,t),s(e,Us,t),bt.m(Xa,e,t),s(e,Ft,t),s(e,se,t),s(e,Ws,t),vt.m(Za,e,t),s(e,xt,t),s(e,le,t),s(e,Ns,t),_t.m(en,e,t),s(e,wt,t),s(e,ae,t),s(e,Ks,t),gt.m(tn,e,t),s(e,kt,t),s(e,ne,t),s(e,Qs,t),Bt.m(sn,e,t),s(e,Tt,t),s(e,oe,t),s(e,Rs,t),s(e,pe,t),s(e,Vs,t),Ht.m(ln,e,t),s(e,Pt,t),s(e,ie,t),s(e,Ys,t),s(e,ce,t),s(e,$s,t),Lt.m(an,e,t),s(e,Mt,t),s(e,re,t),s(e,Js,t),s(e,ye,t),s(e,Xs,t),qt.m(nn,e,t),s(e,jt,t),s(e,De,t),s(e,Zs,t),s(e,Ce,t),s(e,el,t),St.m(on,e,t),s(e,Gt,t),s(e,de,t),s(e,tl,t),zt.m(pn,e,t),s(e,It,t),s(e,Ae,t),s(e,sl,t),s(e,me,t),s(e,ll,t),s(e,ue,t),s(e,al,t),Ot.m(cn,e,t),s(e,Et,t),s(e,he,t),s(e,nl,t),s(e,fe,t),s(e,ol,t),Ut.m(rn,e,t),s(e,Wt,t),s(e,be,t),s(e,pl,t),Nt.m(yn,e,t),s(e,Kt,t),s(e,Fe,t),s(e,il,t),Qt.m(Dn,e,t),s(e,Rt,t),s(e,ve,t),s(e,cl,t),Vt.m(Cn,e,t),s(e,Yt,t),s(e,xe,t),s(e,rl,t),$t.m(dn,e,t),s(e,Jt,t)},p:yl,i:yl,o:yl,d(e){e&&(l(y),l(Xt),l(D),l(Zt),l(C),l(es),l(d),l(ts),l(A),l(ss),l(m),l(ls),l(u),l(as),l(h),l(ns),l(f),l(os),_e.d(),l(we),l(b),l(ps),l(F),l(is),l(v),l(cs),ge.d(),l(ke),l(x),l(rs),Be.d(),l(Te),l(_),l(ys),He.d(),l(Pe),l(w),l(Ds),Le.d(),l(Me),l(g),l(Cs),l(k),l(ds),l(B),l(As),qe.d(),l(je),l(T),l(ms),Se.d(),l(Ge),l(H),l(us),ze.d(),l(Ie),l(P),l(hs),Oe.d(),l(Ee),l(L),l(fs),Ue.d(),l(We),l(M),l(bs),Ne.d(),l(Ke),l(q),l(Fs),l(j),l(vs),l(S),l(xs),Qe.d(),l(Re),l(G),l(_s),Ve.d(),l(Ye),l(z),l(ws),$e.d(),l(Je),l(I),l(gs),l(O),l(ks),Xe.d(),l(Ze),l(E),l(Bs),et.d(),l(tt),l(U),l(Ts),l(W),l(Hs),st.d(),l(lt),l(N),l(Ps),at.d(),l(nt),l(K),l(Ls),ot.d(),l(pt),l(Q),l(Ms),it.d(),l(ct),l(R),l(qs),rt.d(),l(yt),l(V),l(js),Dt.d(),l(Ct),l(Y),l(Ss),dt.d(),l(At),l($),l(Gs),mt.d(),l(ut),l(J),l(zs),l(X),l(Is),l(Z),l(Os),l(ee),l(Es),ht.d(),l(ft),l(te),l(Us),bt.d(),l(Ft),l(se),l(Ws),vt.d(),l(xt),l(le),l(Ns),_t.d(),l(wt),l(ae),l(Ks),gt.d(),l(kt),l(ne),l(Qs),Bt.d(),l(Tt),l(oe),l(Rs),l(pe),l(Vs),Ht.d(),l(Pt),l(ie),l(Ys),l(ce),l($s),Lt.d(),l(Mt),l(re),l(Js),l(ye),l(Xs),qt.d(),l(jt),l(De),l(Zs),l(Ce),l(el),St.d(),l(Gt),l(de),l(tl),zt.d(),l(It),l(Ae),l(sl),l(me),l(ll),l(ue),l(al),Ot.d(),l(Et),l(he),l(nl),l(fe),l(ol),Ut.d(),l(Wt),l(be),l(pl),Nt.d(),l(Kt),l(Fe),l(il),Qt.d(),l(Rt),l(ve),l(cl),Vt.d(),l(Yt),l(xe),l(rl),l(Jt),$t.d())}}}const Fn={title:"Managing code repositories with git",description:"Learn to version codebases for easy collaboration",date:"2022-10-25",image:"/images/macbook-code.jpg",categories:["Git","GitHub"],published:!0};class vn extends mn{constructor(y){super(),un(this,y,null,hn,An,{})}}export{vn as default,Fn as metadata};
